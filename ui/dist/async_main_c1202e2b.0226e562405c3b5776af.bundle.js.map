{"version":3,"sources":["webpack:///./ui/src/lib/ext.js","webpack:///./ui/src/lib/mediaelement-plugins/logo.js","webpack:///./ui/src/lib/mediaelement-plugins/browse.js","webpack:///./ui/src/lib/analytics.js","webpack:///./ui/src/lib/mediaelement-plugins/chromecast/player.js","webpack:///./ui/src/lib/mediaelement-plugins/chromecast.js","webpack:///./ui/src/md/DMCA.md","webpack:///./ui/src/lib/mediaelement-plugins/embed.js","webpack:///./ui/src/lib/store/mutationTypes.js","webpack:///./ui/src/lib/mediaelement-plugins/continue.js","webpack:///./ui/src/lib/mediaelement-plugins/advancedtracks.js","webpack:///./ui/src/lib/mediaelement-plugins/captions.js","webpack:///./ui/src/lib/store/caption.js","webpack:///./ui/src/lib/mediaelement-plugins/availableprogress.js","webpack:///./ui/src/lib/registry.js","webpack:///./ui/src/lib/router.js","webpack:///./ui/src/lib/store/helpers.js","webpack:///./ui/src/lib/store/state.js","webpack:///./ui/src/lib/store/viewModeTypes.js","webpack:///./ui/src/lib/store/mutations.js","webpack:///./ui/src/lib/store/fileUtils.js","webpack:///./ui/src/lib/store/getters.js","webpack:///./ui/src/lib/relevantTrack.js","webpack:///./ui/src/lib/stoplistCheck.js","webpack:///./ui/src/lib/store/arrayToText.js","webpack:///./ui/src/lib/store/actions.js","webpack:///./ui/src/lib/store/modules/hls.js","webpack:///./ui/src/lib/store/modules/player.js","webpack:///./ui/src/lib/langs.js","webpack:///./ui/src/lib/i18n.js","webpack:///./ui/src/lib/markdown.js","webpack:///./ui/src/index.js","webpack:///./ui/src/lib/store.js","webpack:///./ui/src/lib/clientDb.js","webpack:///./ui/src/lib/mediaelement-plugins/download.js","webpack:///./ui/src/lib/message.js","webpack:///./ui/src/real_client.js","webpack:///./ui/src/lib/store/fileToTorrent.js","webpack:///./ui/src/lib/mediaelement-plugins/settings.js","webpack:///./ui/src/lib/store/playerStatusTypes.js","webpack:///./ui/src/lib/langRoutes.js","webpack:///./ui/src/lib/adblock.js","webpack:///./ui/src/lib/langLinks.js","webpack:///./ui/src/lib/mediaelement-plugins/error.js","webpack:///./ui/src/lib/piecesToSegments.js"],"names":["debug","require","Ext","init","Promise","resolve","reject","window","__webtorInjected","addEventListener","event","source","data","webtorInjected","downloadId","this","torrent","ab","Uint8Array","buffer","Buffer","byteLength","view","i","length","parseTorrent","infoHash","e","postMessage","createExt","Object","assign","MediaElementPlayer","prototype","player","controls","layers","route","options","logoButton","document","createElement","className","classPrefix","innerHTML","fullPath","container","appendChild","store","state","getters","dispatch","currentVideoFiles","browseLayer","browseContainer","style","width","height","playLayer","querySelector","insertBefore","registry","buildVue","el","render","h","Browse","on","hide","display","show","zIndex","play","analytics","id","appId","appVersion","appName","Vue","use","VueGtag","config","params","send_page_view","ChromecastPlayer","constructor","controller","media","t","endedMedia","cast","framework","RemotePlayerEventType","IS_PAUSED_CHANGED","paused","pause","IS_MUTED_CHANGED","setMuted","isMuted","volume","IS_MEDIA_LOADED_CHANGED","mejs","Utils","createEvent","dispatchEvent","VOLUME_LEVEL_CHANGED","volumeLevel","DURATION_CHANGED","CURRENT_TIME_CHANGED","getCurrentTime","getDuration","setTimeout","load","isPaused","value","originalNode","readyState","setCurrentTime","setVolume","getVolume","src","setSrc","getSrc","currentTime","seek","getOriginalDuration","setVolumeLevel","playOrPause","castSession","CastContext","getInstance","getCurrentSession","tracks","children","url","type","counter","total","child","tag","tagName","toLowerCase","getAttribute","chrome","Track","TrackType","TEXT","trackContentId","absolutizeUrl","trackContentType","subtype","TextTrackType","SUBTITLES","name","language","customData","push","mediaInfo","MediaInfo","textTrackStyle","TextTrackStyle","metadata","GenericMediaMetadata","streamType","StreamType","Live","hlsSegmentFormat","duration","title","subtitle","poster","images","request","LoadRequest","loadMedia","then","tracksInfo","EditTracksInfoRequest","getMediaSession","editTracksInfo","console","error","log","_getErrorMessage","muteOrUnmute","description","message","code","ErrorCode","API_NOT_INITIALIZED","CANCEL","CHANNEL_ERROR","EXTENSION_MISSING","INVALID_PARAMETER","RECEIVER_UNAVAILABLE","SESSION_ERROR","TIMEOUT","isAvailable","_initializeCastPlayer","s","body","castButton","context","session","setOptions","receiverApplicationId","DEFAULT_MEDIA_RECEIVER_APP_ID","autoJoinPolicy","AutoJoinPolicy","PAGE_SCOPED","androidReceiverCompatible","remotePlayer","RemotePlayer","remotePlayerController","RemotePlayerController","IS_CONNECTED_CHANGED","_switchToCastPlayer","bind","endSession","proxy","isConnected","_setupCastPlayer","_setDefaultPlayer","loadedChromecast","indexOf","getSessionState","DefaultPlayer","currentMediaTime","module","exports","embedButton","addControlElement","embedLayer","embedContainer","toggle","Settings","close","SET_TORRENT_SUCCESS","SET_PWD_SUCCESS","SET_FILE_SUCCESS","SET_SOURCE","SET_PLAYER_STATUS_SUCCESS","SET_PLAYER_FILE_PATH_SUCCESS","SET_PLAYER_SOURCE_URL_SUCCESS","SET_TORRENT_FAILURE","CLEAR_TORRENT_LOAD_ERROR","SET_STAT_SUCCESS","SET_LOAD_STATE","SET_LOAD_STATE_SUCCESS","SET_LOAD_STATE_FAILURE","SET_DELIVERY_FAILURE","CLEAR_DELIVERY_FAILURE","SET_DELIVERY_TOKEN","SET_DOWNLOAD_ID","SET_LANG","SET_USER_LANG","SET_ABUSED","SET_MEDIA_INFO","SET_PLAYER_TIME","SET_CURRENT_DIR_FILE_STATES","SET_FILE_STATE","SET_RECENT_TORRENTS","SET_RECENT_TORRENT","SET_DOWNLOAD_PATH","SET_ADBLOCK_ENABLED","SET_VIEW_MODE","SET_THEME","SET_EXTERNAL_FEATURES","SET_EXTERNAL_SUBTITLES","SET_ATTACHED_TRACKS","SET_EXTERNAL_POSTER","SET_EXTERNAL_CONTROLS","SET_AUTOPLAY","SET_CAPTION","SET_PLAYER_CONTROLS_SHOWN","SET_PLAYER_FULLSCREEN","SET_HEADER","SET_EXTERNAL_TITLE","SET_WIDTH","SET_HEIGHT","SET_IMDBID","SET_COMPLETED_PIECES","CHANGE_CAPTION_SIZE","SET_USER_SETTINGS","SET_ADS_INJECTED","SET_PLAYER_NATIVE_FULLSCREEN","SET_NEW_POSITION","SET_SEEDER","SET_ZIP_DOWNLOAD","SET_LAST_TIME","SET_FIRST_PLAY","SET_IS_CACHED","SET_NAME","SET_DOWNLOAD_STAT","DROP_DOWNLOAD_STAT","SET_DOWNLOAD_TYPE","UPDATE_WINDOW_WIDTH","SET_INITED","SET_PROGRESS","time","lock","apply","continueLayer","continueContainer","hideAndPlay","restartWatch","continueWatch","Continue","props","tracksButton","tracksLayer","tracksContainer","Tracks","captionsLayer","captionsContainer","firstChild","Captions","retryFetch","fetch","retries","retryDelay","attempt","response","Math","pow","retryOn","status","async","getHLSFragments","srcUrl","res","text","parentUrl","substring","lastIndexOf","fragments","lines","split","num","fragment","ended","l","m","match","parseFloat","undefined","content","f","prom","start","convertSMPTEtoSeconds","SMPTE","TypeError","decimalLen","replace","secs","multiplier","reverse","Number","toFixed","parse","str","exec","trackText","$","filter","querySelectorAll","styleNode","getElementById","attr","entries","styles","removeAttribute","attributes","_temp","stop","eq","_style","trim","parseDFXP","pattern","timecode","identifier","settings","parseWebVTT","sanitize","html","div","scripts","getElementsByTagName","remove","allElements","n","attributesObj","Array","slice","call","j","startsWith","searchTrackPosition","mid","lo","hi","BasicSource","getEntry","HLSSource","fetching","entriesByFragment","lastTime","lastIndex","lookAhead","throttle","trailing","findFragment","end","temp","concat","importEntries","preload","loadFragments","makeBasicSource","getCaptionSource","decodeURIComponent","atob","map","c","charCodeAt","toString","join","makeHLSSource","slider","self","AvailabeProgress","VueRouter","routes","addLangRoutes","path","component","md5","randomId","prefix","Date","now","clean","cleanState","pwd","file","cleanPlayerTrack","track","href","processSubtitles","subs","sort","a","b","srclang","same","label","y","idx","parseInt","user","deb","i18n","router","ssr","locales","inited","windowWidth","progress","features","p2pProgress","fullscreen","subtitles","continue","playpause","timeline","chromecast","browse","download","captions","embed","autoSubtitles","isCached","zipDownload","adsInjected","completedPieces","imdbId","autoplay","firstPlay","playerControlsShown","playerFullScreen","playerNativeFullScreen","caption","captionSize","externalSubtitles","externalPoster","externalTitle","header","adblock","viewMode","theme","version","VERSION","baseURL","sponsorURL","authURL","userID","downloadID","downloadPath","fileHistory","playerStatus","IDLE","playerFilePath","playerSourceUrl","wrongFormat","deliveryFailure","loadState","deliveryToken","abused","stats","errors","loadError","lang","locale","userLang","normalized","fallbackLocale","fallbackLang","currentDirFileState","recentTorrents","newPosition","seeder","attachedTracks","downloadStats","downloadType","innerWidth","val","k","mode","set","p","delete","alterSource","SEEKING","ENDED","token","states","torrents","ls","tree","addBranch","parts","part","shift","files","pathParts","pwdParts","currentDir","pwdPart","pop","upPath","item","localeCompare","pathParse","sdk","gtagDimensions","fileExt","deliveryType","mediaType","isAutoplay","isAdblock","isSponsor","filePath","isEmbedded","gtagDownloadDimensions","torrentFile","isVideoMode","isDownloadMode","iOS","includes","navigator","platform","userAgent","showShare","showLogo","showDownload","showStatus","selfHosted","preroll","isIndia","country","underPlayerBanner","warnBanner","shareLink","location","origin","magnetURI","toMagnetURI","blogUrl","backersUrl","technologyUrl","md","translations","messages","util","getMediaType","currentVideoFilesWithFriendlyNames","friendlyName","mm","padStart","currentPrimaryVideoFiles","v","currentInfoHash","isDemo","displayAds","ads","displayPopups","displayAdsense","adsense","displayAdfox","displayPrerolls","isWindows","deepLevel","getDeliveryType","fileName","ext","substr","downloadFile","base","downloadSize","role","sources","streamUrl","getMimeType","invoke","captionSource","openSubtitlesTracks","search","os","openSubtitles","send","o","format","getLang","kind","nativeName","hash","default","autoselect","hasLogin","patreon","normalizeLang","getRelevantTrackFromTracks","getRelevantTrackForLang","findKeyword","endsWith","findKeywordSpaces","replaceAll","findKeywordWithPipes","findKeywordWithPlus","found","stoplist","arrayToText","obj","isArray","Url","cloneDeep","loadScript","statsClient","adsenseInited","adScriptsInited","sha1","db","injectHash","injectCode","adblockEnabled","commit","changeCaptionSize","getMediaInfo","PLAYING","PAUSE","getCurrentDirFileStates","statesObj","zipUrl","downloadUrl","buf","toTorrentFile","blob","Blob","URL","createObjectURL","click","revokeObjectURL","onMessage","onEnd","zipUrlWithProgress","downloadUrlWithProgress","payload","$gtag","downloadEvent","touch","abuse","newState","pieces","oldState","JSON","stringify","pushTorrent","videos","setRecentTorrent","userData","getFileState","u","query","makeQuery","audio","magnet","_","pullTorrent","pull","fetchTorrent","fromUrl","check","receiveOnce","sb","sandblaster","detect","sandboxed","catch","hasOwnProperty","dot","mergeLocaleMessage","newTorrent","r","currentRoute","torrentUrl","receive","torrent_url","omitEmpty","newTorrentMagnet","get","cache","cp","fileToTorrent","next","skip","err","stoplistCheck","metric1","getRelevantTrack","hls","forced","getSubtitleLang","updateFileState","all","updateWindowWidth","debounce","ss","adScripts","setAttribute","s1","client","crossOrigin","slot","placeholder","slots","tries","checkExist","setInterval","offsetWidth","adsbygoogle","clearInterval","beforeEach","to","from","pathname","history","replaceState","page_title","page_path","pageview","getLangRoute","input","infohash","getUserSettings","updateUserSettings","getRecentTorrents","playerInited","prepareTrack","d","namespaced","strict","actions","root","mutations","setSubtitles","setAudio","availableDuration","dropSubtitles","rootState","rootGetters","setSubtitle","setError","setAvailableDuration","setDuration","clearSubtitleDrops","supported","Locales","langs","merge","VueI18n","createApp","api","routerMode","createRouter","best","pluralizationRules","choice","choicesLength","teen","endsWithOne","createI18n","Vuex","Store","modules","createStore","opts","app","App","MarkdownIt","defineProperty","args","renderInline","$t","markdown","Icon","Meta","LinkPlugin","LayoutPlugin","ButtonPlugin","NavbarPlugin","AlertPlugin","JumbotronPlugin","ButtonGroupPlugin","ButtonToolbarPlugin","FormInputPlugin","FormTextareaPlugin","FormSelectPlugin","FormPlugin","CardPlugin","ListGroupPlugin","ProgressPlugin","FormGroupPlugin","FormRadioPlugin","InputGroupPlugin","ModalPlugin","vClickOutside","Db","getDb","openDB","upgrade","oldVersion","fileStore","createObjectStore","keyPath","createIndex","makeFileKey","makeHashAndPwd","hashAndPwd","timestamp","put","getAllFromIndex","getAll","FakeDb","createDb","downloadButton","stopPropagation","preventDefault","inIframe","top","URLSearchParams","parent","func","removeEventListener","callback","referrer","__TOKEN__","__USER__","__CONFIG__","__INJECT_CODE__","__INJECT_HASH__","__INITIAL_STATE__","webtor","headers","ga","userLanguage","localStorage","onReady","$mount","reader","FileReader","arr","target","result","readAsArrayBuffer","settingsButton","settingsLayer","settingsContainer","PLAY","SEEKED","current","meta","routesWithLang","pathToRegexpOptions","checkAdBlock","adBlockEnabled","testAd","offsetHeight","getLangLinks","key","rel","hreflang","errorLayer","errorContainer","Error","piecesLength","progressLength","segments","curSegment","prevPiece","position"],"mappings":"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","file":"async_main_c1202e2b.0226e562405c3b5776af.bundle.js","sourcesContent":["import parseTorrent from 'parse-torrent';\nconst debug = require('debug')('webtor:lib:ext');\nclass Ext {\n  init() {\n    return new Promise((resolve, reject) => {\n      if (window.__webtorInjected) return resolve();\n      debug('wait for initialization');\n      window.addEventListener('message', (event) => {\n        if (event.source != window)\n          return;\n\n        if (event.data.webtorInjected) return resolve();\n      });\n    });\n  }\n  async fetch(downloadId) {\n    await this.init();\n    debug('request downloadId=%d', downloadId);\n    return new Promise((resolve, reject) => {\n      window.addEventListener('message', (event) => {\n        if (event.source != window)\n          return;\n\n        if (event.data.torrent) {\n          const ab = new Uint8Array(event.data.torrent.data);\n          const buffer = new Buffer(ab.byteLength);\n          const view = new Uint8Array(ab);\n          for (let i = 0; i < buffer.length; ++i) {\n            buffer[i] = view[i];\n          }\n          try {\n          const torrent = parseTorrent(buffer);\n          debug('resolve torrent infoHash=%s', torrent.infoHash);\n          resolve(torrent);\n          } catch (e) {\n            reject(e);\n          }\n        }\n      });\n      window.postMessage({downloadId}, '*');\n    });\n  }\n}\nexport function createExt() {\n  return new Ext();\n}\n","// import registry from '../registry';\nObject.assign(MediaElementPlayer.prototype, {\n    async buildlogo(player, controls, layers) {\n        // const store = this.options.store;\n        // let {getters, dispatch} = store;\n        const route = this.options.route;\n        const logoButton = document.createElement('div');\n        logoButton.className = `${this.options.classPrefix}button ${this.options.classPrefix}logo-button`;\n        logoButton.innerHTML =\n            `<a title=\"Download at webtor.io\" class=\"banner\" target=\"_blank\" href=\"/#${route.fullPath + '&event=player-logo-click'}\"><span class=\"pre\">download at</span><span class=\"text\">webtor</span></a>`;\n        player.container.appendChild(logoButton);\n    },\n})","import Browse from '../../components/App/Show/Player/MediaElement/Browse.vue';\n\nimport registry from '../registry';\n\nObject.assign(MediaElementPlayer.prototype, {\n    async buildbrowse(player, controls, layers) {\n        const store = this.options.store;\n        let {state, getters, dispatch} = store;\n        if (getters.currentVideoFiles.length < 2) return;\n        player.browseLayer = document.createElement('div');\n        player.browseLayer.className = `${this.options.classPrefix}layer ${this.options.classPrefix}overlay ${this.options.classPrefix}browse`;\n        const browseContainer = document.createElement('div');\n        player.browseLayer.appendChild(browseContainer);\n        player.browseLayer.style.width  = '100%';\n        player.browseLayer.style.height = '100%';\n        const playLayer = layers.querySelector(`.${this.options.classPrefix}overlay-play`);\n\n        layers.insertBefore(player.browseLayer, playLayer);\n        registry.buildVue({\n            el: browseContainer,\n            render: (h) => h(Browse, {on: {\n                hide() {\n                    player.browseLayer.style.display = 'none';\n                },\n                show() {\n                    player.browseLayer.style.display = '';\n                },\n            }}),\n        });\n        player.browseLayer.style.zIndex = 2;\n        player.browseLayer.addEventListener('click', function() {\n            player.play();\n            player.browseLayer.style.display = 'none';\n        });\n    },\n})","import Vue from 'vue';\nimport VueGtag from 'vue-gtag';\n\nexport function analytics({id, appId, appVersion, appName}) {\n  Vue.use(VueGtag, {\n    config: {\n      id: id,\n      appName,\n      appId,\n      appVersion,\n      params: {\n        send_page_view: false,\n      },\n    },\n  });\n};\n","'use strict';\n\nexport default class ChromecastPlayer {\n\n\t/**\n\t *\n\t * @param {cast.framework.RemotePlayer} player\n\t * @param {cast.framework.RemotePlayerController} controller\n\t * @param {MediaElement} media\n\t * @param {Object} options\n\t */\n\tconstructor (player, controller, media, options) {\n\t\tconst t = this;\n\t\tt.player = player;\n\t\tt.controller = controller;\n\t\tt.media = media;\n\t\tt.endedMedia = false;\n\n\t\t// Add event listeners for player changes which may occur outside sender app\n\t\tt.controller.addEventListener(cast.framework.RemotePlayerEventType.IS_PAUSED_CHANGED, () => {\n\t\t\tif (t.paused) {\n\t\t\t\tt.pause();\n\t\t\t} else {\n\t\t\t\tt.play();\n\t\t\t}\n\t\t\tt.endedMedia = false;\n\t\t});\n\t\tt.controller.addEventListener(cast.framework.RemotePlayerEventType.IS_MUTED_CHANGED, () => {\n\t\t\tt.setMuted(t.player.isMuted);\n\t\t\tt.volume = 0;\n\t\t});\n\t\tt.controller.addEventListener(cast.framework.RemotePlayerEventType.IS_MEDIA_LOADED_CHANGED, () => {\n\t\t\tconst event = mejs.Utils.createEvent('loadedmetadata', t.media);\n\t\t\tt.media.dispatchEvent(event);\n\t\t});\n\t\tt.controller.addEventListener(cast.framework.RemotePlayerEventType.VOLUME_LEVEL_CHANGED, () => {\n\t\t\tt.volume = t.player.volumeLevel;\n\t\t\tconst event = mejs.Utils.createEvent('volumechange', t.media);\n\t\t\tt.media.dispatchEvent(event);\n\t\t});\n\t\tt.controller.addEventListener(cast.framework.RemotePlayerEventType.DURATION_CHANGED, () => {\n\t\t\tconst event = mejs.Utils.createEvent('timeupdate', t.media);\n\t\t\tt.media.dispatchEvent(event);\n\t\t});\n\t\tt.controller.addEventListener(cast.framework.RemotePlayerEventType.CURRENT_TIME_CHANGED, () => {\n\t\t\tconst event = mejs.Utils.createEvent('timeupdate', t.media);\n\t\t\tt.media.dispatchEvent(event);\n\n\t\t\tif (t.getCurrentTime() >= t.getDuration()) {\n\t\t\t\tt.endedMedia = true;\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tconst event = mejs.Utils.createEvent('ended', t.media);\n\t\t\t\t\tt.media.dispatchEvent(event);\n\t\t\t\t}, 50);\n\t\t\t}\n\t\t});\n\t\tt.controller.addEventListener(cast.framework.RemotePlayerEventType.IS_MUTED_CHANGED, () => {\n\t\t\tt.setMuted(t.player.isMuted)\n\t\t});\n\n\t\tt.load();\n\t\treturn t;\n\t}\n\n\tget paused() {\n\t\treturn this.player.isPaused;\n\t}\n\n\tset muted (value) {\n\t\tthis.setMuted(value);\n\t}\n\n\tget muted () {\n\t\treturn this.player.isMuted;\n\t}\n\n\tget ended () {\n\t\treturn this.endedMedia;\n\t}\n\n\tget readyState () {\n\t\treturn this.media.originalNode.readyState;\n\t}\n\n\tset currentTime (value) {\n\t\tthis.setCurrentTime(value);\n\t}\n\n\tget currentTime () {\n\t\treturn this.getCurrentTime();\n\t}\n\n\tget duration () {\n\t\treturn this.getDuration();\n\t}\n\n\tset volume (value) {\n\t\tthis.setVolume(value);\n\t}\n\n\tget volume () {\n\t\treturn this.getVolume();\n\t}\n\n\tset src (src) {\n\t\tthis.setSrc(src);\n\t}\n\n\tget src () {\n\t\treturn this.getSrc();\n\t}\n\n\tgetSrc () {\n\t\treturn this.media.originalNode.src;\n\t}\n\n\tsetSrc (value) {\n\t\tthis.media.originalNode.src = typeof value === 'string' ? value : value[0].src;\n\t\tthis.load();\n\t}\n\n\tsetCurrentTime (value) {\n\t\tthis.player.currentTime = value;\n\t\tthis.controller.seek();\n\t\tconst event = mejs.Utils.createEvent('timeupdate', this.media);\n\t\tthis.media.dispatchEvent(event);\n\t}\n\n\tgetCurrentTime () {\n\t\treturn this.player.currentTime;\n\t}\n\n\tgetOriginalDuration () {\n\t\treturn this.media.getDuration();\n\t}\n\n\tgetDuration () {\n\t\treturn this.getOriginalDuration();\n\t}\n\n\tsetVolume (value) {\n\t\tthis.player.volumeLevel = value;\n\t\tthis.controller.setVolumeLevel();\n\t\tconst event = mejs.Utils.createEvent('volumechange', this.media);\n\t\tthis.media.dispatchEvent(event);\n\t}\n\n\tgetVolume () {\n\t\treturn this.player.volumeLevel;\n\t}\n\n\tplay () {\n\t\tif (this.player.isPaused) {\n\t\t\tthis.controller.playOrPause();\n\t\t\tconst event = mejs.Utils.createEvent('play', this.media);\n\t\t\tthis.media.dispatchEvent(event);\n\t\t}\n\t}\n\n\tpause () {\n\t\tif (!this.player.isPaused) {\n\t\t\tthis.controller.playOrPause();\n\t\t\tconst event = mejs.Utils.createEvent('pause', this.media);\n\t\t\tthis.media.dispatchEvent(event);\n\t\t}\n\t}\n\n\tload () {\n\t\tconst t = this;\n\t\tconst castSession = cast.framework.CastContext.getInstance().getCurrentSession();\n        const tracks = [];\n        const children = t.media.originalNode.children;\n\n        let url = null;\n        let type = null;\n\n        let counter = 1;\n\n        for (let i = 0, total = children.length; i < total; i++) {\n            const child = children[i];\n            const tag = child.tagName.toLowerCase();\n\n            if (tag === 'track' && (child.getAttribute('kind') === 'subtitles' || child.getAttribute('kind') === 'captions')) {\n                const el = new chrome.cast.media.Track(counter, chrome.cast.media.TrackType.TEXT);\n                el.trackContentId = mejs.Utils.absolutizeUrl(child.getAttribute('src'));\n                el.trackContentType = 'text/vtt';\n                el.subtype = chrome.cast.media.TextTrackType.SUBTITLES;\n                el.name = child.getAttribute('label');\n                el.language = child.getAttribute('srclang');\n                el.customData = null;\n                tracks.push(el);\n                counter++;\n            }\n            if (tag === 'source' && url === null) {\n                url = child.getAttribute('src');\n                // type = child.getAttribute('type');\n            }\n        }\n        type = 'application/x-mpegurl';\n\n\t\tconst mediaInfo = new chrome.cast.media.MediaInfo(url, type);\n\n        mediaInfo.textTrackStyle = new chrome.cast.media.TextTrackStyle();\n        mediaInfo.tracks = tracks;\n\n\t\tmediaInfo.metadata = new chrome.cast.media.GenericMediaMetadata();\n\t\tmediaInfo.streamType = chrome.cast.media.StreamType.Live;\n        mediaInfo.hlsSegmentFormat = 'ts';\n\t\tmediaInfo.customData = null;\n\t\tmediaInfo.duration = null;\n\t\t// mediaInfo.currentTime = t.isLive ? Infinity : 0;\n\n\t\tif (t.media.originalNode.getAttribute('data-cast-title')) {\n\t\t\tmediaInfo.metadata.title = t.media.originalNode.getAttribute('data-cast-title');\n\t\t}\n\n\t\tif (t.media.originalNode.getAttribute('data-cast-description')) {\n\t\t\tmediaInfo.metadata.subtitle = t.media.originalNode.getAttribute('data-cast-description');\n\t\t}\n\n\t\tif (t.media.originalNode.getAttribute('poster') || t.media.originalNode.getAttribute('data-cast-poster')) {\n\t\t\tconst poster = t.media.originalNode.getAttribute('poster') || t.media.originalNode.getAttribute('data-cast-poster');\n\t\t\tmediaInfo.metadata.images = [\n\t\t\t\t{'url': mejs.Utils.absolutizeUrl(poster)}\n\t\t\t];\n\t\t}\n\n\t\tconst request = new chrome.cast.media.LoadRequest(mediaInfo);\n\n\t\tcastSession.loadMedia(request).then(() => {\n\t\t\t// Autoplay media in the current position\n\t\t\tconst currentTime = t.media.originalNode.currentTime;\n\t\t\tt.setCurrentTime(currentTime);\n\t\t\tt.play();\n\t\t\tif (tracks.length > 0) {\n\t\t\t\tconst tracksInfo = new chrome.cast.media.EditTracksInfoRequest([1]);\n\t\t\t\tcastSession.getMediaSession().editTracksInfo(tracksInfo, () => {\n\t\t\t\t}, (e) => {\n\t\t\t\t\tconsole.error(e);\n\t\t\t\t});\n\t\t\t}\n\t\t\tconst event = mejs.Utils.createEvent('play', t.media);\n\t\t\tt.media.dispatchEvent(event);\n\t\t}, (error) => {\n            console.log(error);\n\t\t\tt._getErrorMessage(error);\n\t\t});\n\t}\n\n\tsetMuted (value) {\n\t\tif (value === true && !this.player.isMuted) {\n\t\t\tthis.controller.muteOrUnmute();\n\t\t} else if (value === false && this.player.isMuted) {\n\t\t\tthis.controller.muteOrUnmute();\n\t\t}\n\t\tsetTimeout(() => {\n\t\t\tconst event = mejs.Utils.createEvent('volumechange', this.media);\n\t\t\tthis.media.dispatchEvent(event);\n\t\t}, 50);\n\t}\n\n\t_getErrorMessage (error) {\n\n\t\tconst description = error.description ? ` : ${error.description}` : '.';\n\n\t\tlet message;\n\n\t\tswitch (error.code) {\n\t\t\tcase chrome.cast.ErrorCode.API_NOT_INITIALIZED:\n\t\t\t\tmessage = `The API is not initialized${description}`;\n\t\t\t\tbreak;\n\t\t\tcase chrome.cast.ErrorCode.CANCEL:\n\t\t\t\tmessage = `The operation was canceled by the user${description}`;\n\t\t\t\tbreak;\n\t\t\tcase chrome.cast.ErrorCode.CHANNEL_ERROR:\n\t\t\t\tmessage = `A channel to the receiver is not available${description}`;\n\t\t\t\tbreak;\n\t\t\tcase chrome.cast.ErrorCode.EXTENSION_MISSING:\n\t\t\t\tmessage = `The Cast extension is not available${description}`;\n\t\t\t\tbreak;\n\t\t\tcase chrome.cast.ErrorCode.INVALID_PARAMETER:\n\t\t\t\tmessage = `The parameters to the operation were not valid${description}`;\n\t\t\t\tbreak;\n\t\t\tcase chrome.cast.ErrorCode.RECEIVER_UNAVAILABLE:\n\t\t\t\tmessage = `No receiver was compatible with the session request${description}`;\n\t\t\t\tbreak;\n\t\t\tcase chrome.cast.ErrorCode.SESSION_ERROR:\n\t\t\t\tmessage = `A session could not be created, or a session was invalid${description}`;\n\t\t\t\tbreak;\n\t\t\tcase chrome.cast.ErrorCode.TIMEOUT:\n\t\t\t\tmessage = `The operation timed out${description}`;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tmessage = `Unknown error: ${error}`;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tconsole.error(message);\n\t}\n}\n\nwindow.ChromecastPlayer = ChromecastPlayer;","import ChromecastPlayer from './chromecast/player';\nObject.assign(MediaElementPlayer.prototype, {\n    async buildchromecast(player, controls, layers) {\n        const t = this;\n        window['__onGCastApiAvailable'] = function(isAvailable) {\n            if (isAvailable) {\n                t._initializeCastPlayer();\n            }\n        };\n        if (window.cast) {\n            t._initializeCastPlayer();\n        } else {\n            const s = document.createElement('script');\n            s.type = 'text/javascript';\n            s.src = 'https://www.gstatic.com/cv/js/sender/v1/cast_sender.js?loadCastFramework=1';\n            document.body.appendChild(s);\n        }\n        player.castButton = document.createElement('div');\n\t\tplayer.castButton.className = `${t.options.classPrefix}button ${t.options.classPrefix}cast-button`;\n\t\tplayer.castButton.innerHTML =\n\t\t\t`<google-cast-launcher id=\"castbutton\"></google-cast-launcher>`;\n        player.container.appendChild(player.castButton);\n    },\n\t/**\n\t *\n\t * @private\n\t */\n     _initializeCastPlayer () {\n\t\tconst t = this;\n\n\t\tconst\n\t\t\tcontext = cast.framework.CastContext.getInstance(),\n\t\t\tsession = context.getCurrentSession()\n\t\t;\n\n        context.setOptions({\n            receiverApplicationId: chrome.cast.media.DEFAULT_MEDIA_RECEIVER_APP_ID,\n            autoJoinPolicy: chrome.cast.AutoJoinPolicy.PAGE_SCOPED,\n            androidReceiverCompatible: true,\n        });\n\n\t\tt.remotePlayer = new cast.framework.RemotePlayer();\n\t\tt.remotePlayerController = new cast.framework.RemotePlayerController(t.remotePlayer);\n\t\tt.remotePlayerController.addEventListener(cast.framework.RemotePlayerEventType.IS_CONNECTED_CHANGED, t._switchToCastPlayer.bind(this));\n\n\t\tif (session) {\n\t\t\tsession.endSession(true);\n\t\t\t// t._switchToCastPlayer();\n\t\t}\n\t},\n\n\t/**\n\t *\n\t * @private\n\t */\n\t_switchToCastPlayer () {\n\t\tconst t = this;\n\n\t\tif (t.proxy) {\n\t\t\tt.proxy.pause();\n\t\t}\n\t\tif (cast && cast.framework) {\n\t\t\tif (t.remotePlayer.isConnected) {\n\t\t\t\tt._setupCastPlayer();\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tt._setDefaultPlayer();\n\t},\n\t/**\n\t *\n\t * @private\n\t */\n\t_setupCastPlayer () {\n\t\tconst\n\t\t\tt = this,\n\t\t\tcontext = cast.framework.CastContext.getInstance(),\n\t\t\tcastSession = context.getCurrentSession()\n\t\t;\n\n\t\tif (t.loadedChromecast === true) {\n\t\t\treturn;\n\t\t}\n\n\t\tt.loadedChromecast = true;\n\n\t\tt.proxy = new ChromecastPlayer(t.remotePlayer, t.remotePlayerController, t.media, t.options);\n\n\t\t// If no Cast was setup correctly, make sure it is\n\t\tt.media.addEventListener('loadedmetadata', () => {\n\t\t\tif (['SESSION_ENDING', 'SESSION_ENDED', 'NO_SESSION'].indexOf(castSession.getSessionState()) === -1 &&\n\t\t\t\tt.proxy instanceof DefaultPlayer) {\n\t\t\t\tt.proxy.pause();\n\t\t\t\tt.proxy = new ChromecastPlayer(t.remotePlayer, t.remotePlayerController, t.media, t.options);\n\t\t\t}\n\t\t});\n\n\t\tt.media.addEventListener('timeupdate', () => {\n\t\t\tt.currentMediaTime = t.getCurrentTime();\n\t\t});\n\t}\n})","module.exports = \"<p>YOURSITE respects the intellectual property of others. YOURSITE takes matters of Intellectual Property very seriously and is committed to meeting the needs of content owners while helping them manage publication of their content online.</p>\\n<p>It should be noted that YOURSITE is a simple search engine of videos available at a wide variety websites.\\nIf you believe that your copyrighted work has been copied in a way that constitutes copyright infringement and is accessible on this site, you may notify our copyright agent, as set forth in the Digital Millennium Copyright Act of 1998 (DMCA). For your complaint to be valid under the DMCA, you must provide the following information when providing notice of the claimed copyright infringement:</p>\\n<p>A physical or electronic signature of a person authorized to act on behalf of the copyright owner Identification of the copyrighted work claimed to have been infringed\\nIdentification of the material that is claimed to be infringing or to be the subject of the infringing activity and that is to be removed\\nInformation reasonably sufficient to permit the service provider to contact the complaining party, such as an address, telephone number, and, if available, an electronic mail address\\nA statement that the complaining party &quot;in good faith believes that use of the material in the manner complained of is not authorized by the copyright owner, its agent, or law&quot;\\nA statement that the &quot;information in the notification is accurate&quot;, and &quot;under penalty of perjury, the complaining party is authorized to act on behalf of the owner of an exclusive right that is allegedly infringed&quot;\\nThe above information must be submitted as a written, faxed or emailed notification to the following Designated Agent:</p>\\n<p>Attn: DMCA Office</p>\\n<p>Contact Us : http://www.watchdogsecurity.online</p>\\n<p>WE CAUTION YOU THAT UNDER FEDERAL LAW, IF YOU KNOWINGLY MISREPRESENT THAT ONLINE MATERIAL IS INFRINGING, YOU MAY BE SUBJECT TO HEAVY CIVIL PENALTIES. THESE INCLUDE MONETARY DAMAGES, COURT COSTS, AND ATTORNEYS FEES INCURRED BY US, BY ANY COPYRIGHT OWNER, OR BY ANY COPYRIGHT OWNER&#39;S LICENSEE THAT IS INJURED AS A RESULT OF OUR RELYING UPON YOUR MISREPRESENTATION. YOU MAY ALSO BE SUBJECT TO CRIMINAL PROSECUTION FOR PERJURY.</p>\\n<p>This information should not be construed as legal advice, for further details on the information required for valid DMCA notifications, see 17 U.S.C. 512(c)(3).</p>\\n\";","import Settings from '../../components/App/Show/Player/MediaElement/Embed.vue';\nimport registry from '../registry';\nObject.assign(MediaElementPlayer.prototype, {\n    async buildembed(player, controls, layers) {\n        // const store = this.options.store;\n        // let {getters, dispatch} = store;\n        player.embedButton = document.createElement('div');\n        player.embedButton.className = `${this.options.classPrefix}button ${this.options.classPrefix}embed-button`;\n        player.embedButton.innerHTML =\n            `<button type=\"button\" role=\"button\" aria-owns=\"${this.id}\" tabindex=\"0\">&lt;<span class=\"slash\">/</span>&gt;</button>`;\n        this.addControlElement(player.embedButton, 'embed');\n        player.embedLayer = document.createElement('div');\n        player.embedLayer.className = `${this.options.classPrefix}layer ${this.options.classPrefix}overlay ${this.options.classPrefix}embed`;\n        const embedContainer = document.createElement('div');\n        player.embedLayer.appendChild(embedContainer);\n        const playLayer = layers.querySelector(`.${this.options.classPrefix}overlay-play`);\n        // playLayer.style.display = 'none';\n\n        layers.insertBefore(player.embedLayer, playLayer);\n        player.embedLayer.style.width = '100%';\n        player.embedLayer.style.height = '100%';\n        let toggle = false;\n        const t = () => {\n            if (toggle) {\n                player.embedLayer.style.display = 'none';\n            } else {\n                player.embedLayer.style.display = '';\n            }\n            toggle = !toggle;\n        }\n        registry.buildVue({\n            el: embedContainer,\n            render: (h) => h(Settings, {on: {\n                close: t,\n            }}),\n        });\n        player.embedLayer.style.display = 'none';\n        player.embedLayer.style.zIndex = 2;\n        player.embedButton.addEventListener('click', t);\n    },\n})","export const SET_TORRENT_SUCCESS = 'SET_TORRENT_SUCCESS';\nexport const SET_PWD_SUCCESS = 'SET_PWD_SUCCESS';\nexport const SET_FILE_SUCCESS = 'SET_FILE_SUCCESS';\nexport const SET_SOURCE = 'SET_SOURCE';\nexport const SET_PLAYER_STATUS_SUCCESS = 'SET_PLAYER_STATUS_SUCCESS';\nexport const SET_PLAYER_FILE_PATH_SUCCESS = 'SET_PLAYER_FILE_PATH_SUCCESS';\nexport const SET_PLAYER_SOURCE_URL_SUCCESS = 'SET_PLAYER_SOURCE_URL_SUCCESS';\nexport const SET_TORRENT_FAILURE = 'SET_TORRENT_FAILURE';\nexport const CLEAR_TORRENT_LOAD_ERROR = 'CLEAR_TORRENT_LOAD_ERROR';\nexport const SET_STAT_SUCCESS = 'SET_STAT_SUCCESS';\nexport const SET_LOAD_STATE = 'SET_LOAD_STATE';\nexport const SET_LOAD_STATE_SUCCESS = 'SET_LOAD_STATE_SUCCESS';\nexport const SET_LOAD_STATE_FAILURE = 'SET_LOAD_STATE_FAILURE';\nexport const SET_DELIVERY_FAILURE = 'SET_DELIVERY_FAILURE';\nexport const CLEAR_DELIVERY_FAILURE = 'CLEAR_DELIVERY_FAILURE';\nexport const SET_DELIVERY_TOKEN = 'SET_DELIVERY_TOKEN';\nexport const SET_DOWNLOAD_ID = 'SET_DOWNLOAD_ID';\nexport const SET_LANG = 'SET_LANG';\nexport const SET_USER_LANG = 'SET_USER_LANG';\nexport const SET_ABUSED = 'SET_ABUSED';\nexport const SET_MEDIA_INFO = 'SET_MEDIA_INFO';\nexport const SET_PLAYER_TIME = 'SET_PLAYER_TIME';\nexport const SET_CURRENT_DIR_FILE_STATES = 'SET_CURRENT_DIR_FILE_STATES';\nexport const SET_FILE_STATE = 'SET_FILE_STATE';\nexport const SET_RECENT_TORRENTS = 'SET_RECENT_TORRENTS';\nexport const SET_RECENT_TORRENT = 'SET_RECENT_TORRENT';\nexport const SET_AUDIO_SETTING = 'SET_AUDIO_SETTING';\nexport const SET_SUBTITLE_SETTING = 'SET_SUBTITLE_SETTING';\nexport const DROP_AUDIO_SETTING = 'DROP_AUDIO_SETTING';\nexport const DROP_SUBTITLE_SETTING = 'DROP_SUBTITLE_SETTING';\nexport const SET_ACTION = 'SET_ACTION';\nexport const SET_DOWNLOAD_PATH = 'SET_DOWNLOAD_PATH';\nexport const SET_ADBLOCK_ENABLED = 'SET_ADBLOCK_ENABLED';\nexport const SET_VIEW_MODE = 'SET_VIEW_MODE';\nexport const SET_THEME = 'SET_THEME';\nexport const SET_ID = 'SET_ID';\nexport const SET_EXTERNAL_FEATURES = 'SET_EXTERNAL_FEATURES';\nexport const SET_EXTERNAL_SUBTITLES = 'SET_EXTERNAL_SUBTITLES';\nexport const SET_ATTACHED_TRACKS = 'SET_ATTACHED_TRACKS';\nexport const SET_EXTERNAL_POSTER = 'SET_EXTERNAL_POSTER';\nexport const SET_EXTERNAL_CONTROLS = 'SET_EXTERNAL_CONTROLS';\nexport const SET_AUTOPLAY = 'SET_AUTOPLAY';\nexport const SET_CAPTION = 'SET_CAPTION';\nexport const SET_PLAYER_CONTROLS_SHOWN = 'SET_PLAYER_CONTROLS_SHOWN';\nexport const SET_PLAYER_FULLSCREEN = 'SET_PLAYER_FULLSCREEN';\nexport const SET_HEADER = 'SET_HEADER';\nexport const SET_EXTERNAL_TITLE = 'SET_EXTERNAL_TITLE';\nexport const SET_WIDTH = 'SET_WIDTH';\nexport const SET_HEIGHT = 'SET_HEIGHT';\nexport const SET_IMDBID = 'SET_IMDBID';\nexport const SET_COMPLETED_PIECES = 'SET_COMPLETED_PIECES';\nexport const CHANGE_CAPTION_SIZE = 'SET_CAPTION_SIZE';\nexport const SET_USER_SETTINGS = 'SET_USER_SETTINGS';\nexport const SET_ADS_INJECTED = 'SET_ADS_INJECTED';\nexport const SET_PLAYER_NATIVE_FULLSCREEN = 'SET_PLAYER_NATIVE_FULLSCREEN';\nexport const SET_NEW_POSITION = 'SET_NEW_POSITION';\nexport const SET_SEEDER = 'SET_SEEDER';\nexport const SET_ZIP_DOWNLOAD = 'SET_ZIP_DOWNLOAD';\nexport const SET_LAST_TIME = 'SET_LAST_TIME';\nexport const SET_FIRST_PLAY = 'SET_FIRST_PLAY';\nexport const SET_IS_CACHED = 'SET_IS_CACHED';\nexport const SET_NAME = 'SET_NAME';\nexport const SET_DOWNLOAD_STAT = 'SET_DOWNLOAD_STAT';\nexport const DROP_DOWNLOAD_STAT = 'DROP_DOWNLOAD_STAT';\nexport const SET_DOWNLOAD_TYPE = 'SET_DOWNLOAD_TYPE';\nexport const UPDATE_WINDOW_WIDTH = 'UPDATE_WINDOW_WIDTH';\nexport const SET_INITED = 'SET_INITED';\nexport const SET_PROGRESS = 'SET_PROGRESS';\n","import Continue from '../../components/App/Show/Player/MediaElement/Continue.vue';\n\nimport registry from '../registry';\n\nObject.assign(MediaElementPlayer.prototype, {\n    async buildcontinue(player, controls, layers) {\n        const store = this.options.store;\n        let {state, getters, dispatch} = store;\n        if (state.time <= 60) {\n            player.currentTime = 0;\n            return;\n        }\n        const time = state.time; \n        const play = player.play;\n        let lock = true;\n        player.play = () => {\n            if (!lock) {\n                play.apply(player);\n            }\n        }\n        player.pause();\n        player.continueLayer = document.createElement('div');\n        player.continueLayer.className = `${this.options.classPrefix}layer ${this.options.classPrefix}overlay ${this.options.classPrefix}continue`;\n        const continueContainer = document.createElement('div');\n        player.continueLayer.appendChild(continueContainer);\n        const playLayer = layers.querySelector(`.${this.options.classPrefix}overlay-play`);\n\n        layers.insertBefore(player.continueLayer, playLayer);\n        // playLayer.style.display = 'none';\n        // let toggle = false;\n        function hideAndPlay() {\n            lock = false;\n            player.play();\n            player.continueLayer.style.display = 'none';\n        }\n        function restartWatch() {\n            if (!player) return;\n            player.currentTime = 0;\n            hideAndPlay();\n        }\n        function continueWatch() {\n            player.currentTime = time - 5;\n            hideAndPlay();\n        }\n        registry.buildVue({\n            el: continueContainer,\n            render: (h) => h(Continue, {\n                on: {\n                    continueWatch,\n                    restartWatch,\n                },\n                props: {\n                    time,\n                },\n            }),\n        });\n        player.continueLayer.style.zIndex = 2;\n        playLayer.style.display = 'none';\n    },\n})","import Tracks from '../../components/App/Show/Player/MediaElement/Tracks.vue';\n\nimport registry from '../registry';\n\nObject.assign(MediaElementPlayer.prototype, {\n    async buildadvancedtracks(player, controls, layers) {\n        player.tracksButton = document.createElement('div');\n\t\tplayer.tracksButton.className = `${this.options.classPrefix}button ${this.options.classPrefix}captions-button`;\n\t\tplayer.tracksButton.innerHTML =\n\t\t\t`<button type=\"button\" role=\"button\" aria-owns=\"${this.id}\" tabindex=\"0\"></button>`;\n\t\tthis.addControlElement(player.tracksButton, 'tracks');\n        player.tracksLayer = document.createElement('div');\n        player.tracksLayer.className = `${this.options.classPrefix}layer ${this.options.classPrefix}overlay ${this.options.classPrefix}tracks`;\n        const tracksContainer = document.createElement('div');\n        player.tracksLayer.appendChild(tracksContainer);\n        const playLayer = layers.querySelector(`.${this.options.classPrefix}overlay-play`);\n        // playLayer.style.display = 'none';\n\n        layers.insertBefore(player.tracksLayer, playLayer);\n        player.tracksLayer.style.width = '100%';\n        player.tracksLayer.style.height = '100%';\n        let toggle = false;\n        const t = () => {\n            if (toggle) {\n                player.tracksLayer.style.display = 'none';\n            } else {\n                player.tracksLayer.style.display = '';\n            }\n            toggle = !toggle;\n        }\n        const show = () => {\n            player.tracksLayer.style.display = '';\n            toggle = true;\n        }\n        const close = () => {\n            player.tracksLayer.style.display = 'none';\n            toggle = false;\n        }\n        const v = registry.buildVue({\n            el: tracksContainer,\n            render: (h) => h(Tracks, {\n                props: {\n                    player: player,\n                },\n                on: {\n                    close,\n                    show,\n                }\n            }),\n        });\n        player.tracksLayer.style.display = 'none';\n        player.tracksLayer.style.zIndex = 2;\n        player.tracksButton.addEventListener('click', t);\n\n    },\n})","import Captions from '../../components/App/Show/Player/MediaElement/Tracks/Captions.vue';\n\nimport registry from '../registry';\n\nObject.assign(MediaElementPlayer.prototype, {\n    async buildcaptions(player, controls, layers) {\n\t\tplayer.captionsLayer = document.createElement('div');\n\t\tplayer.captionsLayer.className = `${this.options.classPrefix}captions-layer ${this.options.classPrefix}layer`;\n        const captionsContainer = document.createElement('div');\n        player.captionsLayer.appendChild(captionsContainer);\n\t\tlayers.insertBefore(player.captionsLayer, layers.firstChild);\n        player.captionsLayer.style.width = '100%';\n        player.captionsLayer.style.height = '100%';\n        player.captionsLayer.addEventListener('click', function() {\n            player.pause();\n        });\n        registry.buildVue({\n            el: captionsContainer,\n            render: (h) => h(Captions),\n        });\n    },\n})","const debug = require('debug')('webtor:lib:captions');\nimport throttle from 'lodash/throttle';\nconst debugFetch = function(url) {\n    debug('fetch caption url=%o', url);\n    return fetch(url);\n}\nconst retryFetch = require('fetch-retry')(debugFetch, {\n    retries: 5,\n    retryDelay: function(attempt, error, response) {\n        return Math.pow(2, attempt) * 1000;\n    },\n    retryOn: function(attempt, error, response) {\n        if (error !== null || response.status >= 500) {\n            debug('got captions error retry count=%o', attempt);\n            return true;\n        }\n    },\n});\nasync function getHLSFragments(srcUrl) {\n    const res = await(retryFetch(srcUrl));\n    const src = await res.text();\n    const parentUrl = srcUrl.substring(0, srcUrl.lastIndexOf( \"/\" ) + 1);\n    const fragments = [];\n    const lines = src.split(\"\\n\");\n    let current = 0;\n    let num = 0;\n    let fragment = {};\n    let ended = false;\n    for (const l of lines) {\n        const m = l.match('#EXTINF:([0-9\\.]+),');\n        if (l == '#EXT-X-ENDLIST') {\n            ended = true;\n        }\n        if (m) {\n            fragment.num = num;\n            fragment.length = parseFloat(m[1]);\n            num++;\n        }\n        if (l.match('^[^#]')) {\n            fragment.name = l;\n            fragment.src = parentUrl + fragment.name;\n        }\n        if (fragment.name !== undefined) {\n            fragments.push(fragment);\n            fragment.content = function(f) {\n                let prom = null;\n                return function() {\n                    if (prom === null) {\n                        prom = new Promise(async function(resolve, reject) {\n                            const res = await(retryFetch(f.src));\n                            const src = await res.text();\n                            resolve(src);\n                        });\n                    }\n                    return prom;\n                }\n            }(fragment);\n            fragment = {start: current};\n        }\n    }\n    return {fragments, ended};\n}\n\nfunction convertSMPTEtoSeconds(SMPTE) {\n\n\tif (typeof SMPTE !== 'string') {\n\t\tthrow new TypeError('Argument must be a string value');\n\t}\n\n\tSMPTE = SMPTE.replace(',', '.');\n\n\tconst decimalLen = ~SMPTE.indexOf('.') ? SMPTE.split('.')[1].length : 0;\n\n\tlet\n\t\tsecs = 0,\n\t\tmultiplier = 1\n\t;\n\n\tSMPTE = SMPTE.split(':').reverse();\n\n\tfor (let i = 0, total = SMPTE.length; i < total; i++) {\n\t\tmultiplier = 1;\n\t\tif (i > 0) {\n\t\t\tmultiplier = Math.pow(60, i);\n\t\t}\n\t\tsecs += Number(SMPTE[i]) * multiplier;\n\t}\n\treturn Number(secs.toFixed(decimalLen));\n}\n\nfunction parseDFXP(trackText) {\n    trackText = $(trackText).filter('tt');\n    const\n        container = trackText.firstChild,\n        lines = container.querySelectorAll('p'),\n        styleNode = trackText.getElementById(`${container.attr('style')}`),\n        entries = []\n    ;\n\n    let styles;\n\n    if (styleNode.length) {\n        styleNode.removeAttribute('id');\n        const attributes = styleNode.attributes;\n        if (attributes.length) {\n            styles = {};\n            for (let i = 0, total = attributes.length; i < total; i++) {\n                styles[attributes[i].name.split(\":\")[1]] = attributes[i].value;\n            }\n        }\n    }\n\n    for (let i = 0, total = lines.length; i < total; i++) {\n        let\n            style,\n            _temp = {\n                start: null,\n                stop: null,\n                style: null,\n                text: null\n            }\n        ;\n\n        if (lines.eq(i).attr('begin')) {\n            _temp.start = convertSMPTEtoSeconds(lines.eq(i).attr('begin'));\n        }\n        if (!_temp.start && lines.eq(i - 1).attr('end')) {\n            _temp.start = convertSMPTEtoSeconds(lines.eq(i - 1).attr('end'));\n        }\n        if (lines.eq(i).attr('end')) {\n            _temp.stop = convertSMPTEtoSeconds(lines.eq(i).attr('end'));\n        }\n        if (!_temp.stop && lines.eq(i + 1).attr('begin')) {\n            _temp.stop = convertSMPTEtoSeconds(lines.eq(i + 1).attr('begin'));\n        }\n\n        if (styles) {\n            style = '';\n            for (let _style in styles) {\n                style += `${_style}:${styles[_style]};`;\n            }\n        }\n        if (style) {\n            _temp.style = style;\n        }\n        if (_temp.start === 0) {\n            _temp.start = 0.200;\n        }\n        _temp.text = lines.eq(i).innerHTML.trim().replace(/(\\b(https?|ftp|file):\\/\\/[-A-Z0-9+&@#\\/%?=~_|!:,.;]*[-A-Z0-9+&@#\\/%=~_|])/ig, \"<a href='$1' target='_blank'>$1</a>\");\n        entries.push(_temp);\n    }\n    return entries;\n}\n\nfunction parseWebVTT(trackText) {\n    const\n        lines = trackText.split(/\\r?\\n/),\n        entries = [],\n        pattern = /^((?:[0-9]{1,2}:)?[0-9]{2}:[0-9]{2}([,.][0-9]{1,3})?) --\\> ((?:[0-9]{1,2}:)?[0-9]{2}:[0-9]{2}([,.][0-9]{3})?)(.*)$/\n    ;\n    let\n        timecode,\n        text,\n        identifier\n    ;\n\n    for (let i = 0, total = lines.length; i < total; i++) {\n        timecode = pattern.exec(lines[i]);\n\n        if (timecode && i < lines.length) {\n            if ((i - 1) >= 0 && lines[i - 1] !== '') {\n                identifier = lines[i - 1];\n            }\n            i++;\n            // grab all the (possibly multi-line) text that follows\n            text = lines[i];\n            i++;\n            while (lines[i] !== '' && i < lines.length) {\n                text = `${text}\\n${lines[i]}`;\n                i++;\n            }\n            text = text.trim().replace(/(\\b(https?|ftp|file):\\/\\/[-A-Z0-9+&@#\\/%?=~_|!:,.;]*[-A-Z0-9+&@#\\/%=~_|])/ig, \"<a href='$1' target='_blank'>$1</a>\");\n            entries.push({\n                identifier: identifier,\n                start: (convertSMPTEtoSeconds(timecode[1]) === 0) ? 0.200 : convertSMPTEtoSeconds(timecode[1]),\n                stop: convertSMPTEtoSeconds(timecode[3]),\n                text: text,\n                settings: timecode[5]\n            });\n        }\n        identifier = '';\n    }\n    return entries;\n}\n\nfunction parse(str) {\n    return typeof str === 'string' && (/<tt\\s+xml/ig).exec(str) ?\n        parseDFXP(str) : parseWebVTT(str);\n}\n\nfunction sanitize(html) {\n    const div = document.createElement('div');\n    div.innerHTML = html;\n\n    // Remove all `<script>` tags first\n    const scripts = div.getElementsByTagName('script');\n    let i = scripts.length;\n    while (i--) {\n        scripts[i].remove();\n    }\n\n    // Loop the elements and remove anything that contains value=\"javascript:\" or an `on*` attribute\n    // (`onerror`, `onclick`, etc.)\n    const allElements = div.getElementsByTagName('*');\n    for (let i = 0, n = allElements.length; i < n; i++) {\n        const\n            attributesObj = allElements[i].attributes,\n            attributes = Array.prototype.slice.call(attributesObj)\n        ;\n\n        for (let j = 0, total = attributes.length; j < total; j++) {\n            if (attributes[j].name.startsWith('on') || attributes[j].value.startsWith('javascript')) {\n                allElements[i].remove();\n            } else if (attributes[j].name === 'style') {\n                allElements[i].removeAttribute(attributes[j].name);\n            }\n        }\n\n    }\n    return div.innerHTML;\n}\n\nfunction isDataURI(url) {\n    return url.match(/^data:(?:.+?\\/.+?)?(?:;.+?=.+?)*(?:;base64)?,.*$/);\n}\nfunction b64DecodeUnicode(str) {\n    // Going backwards: from bytestream, to percent-encoding, to original string.\n    return decodeURIComponent(atob(str).split('').map(function(c) {\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n    }).join(''));\n}\n\nfunction searchTrackPosition(tracks, currentTime) {\n    let\n        lo = 0,\n        hi = tracks.length - 1,\n        mid,\n        start,\n        stop\n    ;\n\n    while (lo <= hi) {\n        mid = ((lo + hi) >> 1);\n        start = tracks[mid].start;\n        stop = tracks[mid].stop;\n\n        if (currentTime >= start && currentTime < stop) {\n            return mid;\n        } else if (start < currentTime) {\n            lo = mid + 1;\n        } else if (start > currentTime) {\n            hi = mid - 1;\n        }\n    }\n\n    return -1;\n}\n\nclass BasicSource {\n    constructor(src) {\n        this.entries = parse(src);\n    }\n    getEntry(time) {\n        const i = searchTrackPosition(this.entries, time)\n        if (i > -1) return this.entries[i];\n        return null;\n    }\n}\n\nclass HLSSource {\n    constructor(src) {\n        this.src = src;\n        this.fragments = [];\n        this.fetching = false;\n        this.ended = false;\n        this.entries = [];\n        this.entriesByFragment = [];\n        this.lastTime = 0;\n        this.lastIndex = 0;\n        this.lookAhead = 60*5;\n        this.getHLSFragments = throttle(getHLSFragments, 5000, {\n            trailing: false,\n        });\n    }\n    findFragment(time) {\n        for (const f of this.fragments) {\n            if (time > f.start && time < f.end) {\n                return f;\n            }\n        }\n    }\n    async importEntries(f) {\n        if (f.num in this.entriesByFragment) return;\n        const c = await f.content();\n        const entries = parse(c);\n        this.entriesByFragment[f.num] = entries;\n        if (entries.length == 0) return;\n        let temp = [];\n        for (const e of this.entriesByFragment) {\n            if (e) temp = temp.concat(e);\n        }\n        this.entries = temp;\n    }\n    async preload(time) {\n        let i;\n        for (i = this.lastIndex; i < this.fragments.length && this.lastTime < time + this.lookAhead; i++) {\n            await this.importEntries(this.fragments[i]);\n            this.lastTime = this.entries.slice(-1)[0].start;\n        }\n        this.lastIndex = i;\n    }\n    async loadFragments(time) {\n        if (this.lastTime >= time + this.lookAhead) return;\n        if (!this.ended) {\n            const {fragments, ended} = await this.getHLSFragments(this.src);\n            this.fragments = fragments;\n            this.ended = ended;\n        }\n        await this.preload(time);\n    }\n    async getEntry(time) {\n        this.loadFragments(time);\n        const i = searchTrackPosition(this.entries, time)\n        if (i > -1) return this.entries[i];\n        return null;\n    }\n}\n\nfunction makeBasicSource(src) {\n    return new BasicSource(src);\n}\n\nfunction makeHLSSource(src) {\n    return new HLSSource(src);\n}\n\nasync function getCaptionSource(src) {\n    if (!src) {\n        return null;\n    } else if (isDataURI(src)) {\n        return makeBasicSource(b64DecodeUnicode(src.split(',')[1]));\n    } else if (src.match(/\\.(srt|vtt)/)) {\n        const res = await(retryFetch(src));\n        const data = await res.text();\n        return makeBasicSource(data);\n    } else if (src.match(/\\.m3u8/)) {\n        return makeHLSSource(src);\n    }\n}\n\nexport {getCaptionSource, sanitize};","import AvailabeProgress from '../../components/App/Show/Player/MediaElement/AvailabeProgress.vue';\n\nimport registry from '../registry';\n\nObject.assign(MediaElementPlayer.prototype, {\n    async buildavailableprogress(player, controls, layers) {\n        const store = this.options.store;\n        const slider = player.slider;\n        const el = document.createElement('span');\n        // el.className = `${this.options.classPrefix}time-available`;\n        slider.appendChild(el);\n        // player.errorLayer = document.createElement('div');\n        // player.errorLayer.className = `${this.options.classPrefix}layer ${this.options.classPrefix}overlay ${this.options.classPrefix}error`;\n        // const errorContainer = document.createElement('div');\n        // player.errorLayer.appendChild(errorContainer);\n        // player.errorLayer.style.width = '100%';\n        // player.errorLayer.style.height = '100%';\n        // player.errorLayer.style.display = 'none';\n        // const playLayer = layers.querySelector(`.${this.options.classPrefix}overlay-play`);\n        // player.media.addEventListener('error', function(e) {\n        //     player.errorLayer.style.display = '';\n        // });\n        // layers.insertBefore(player.errorLayer, playLayer);\n        const self = this;\n        registry.buildVue({\n            el,\n            render: (h) => h(AvailabeProgress, {\n                props: {\n                    options: self.options,\n                }\n            }),\n        });\n    },\n})","const registry = {};\nexport default registry;","import Vue from 'vue';\nimport VueRouter from 'vue-router';\nVue.use(VueRouter);\nimport {addLangRoutes} from './langRoutes';\nconst routes = addLangRoutes([\n  {path: '/', name: 'intro', component: () => import('../components/App/Intro.vue')},\n  {path: '/show', name: 'show', component: () => import('../components/App/Show.vue')},\n  {path: '/support', name: 'support', component: () => import('../components/App/Support.vue')},\n  {path: '/dmca', name: 'dmca', component: () => import('../components/App/DMCA.vue')},\n  {path: '/magnet-to-torrent', name: 'magnet2torrent', component: () => import('../components/App/Tools/Magnet2Torrent.vue')},\n  {path: '/torrent-to-magnet', name: 'torrent2magnet', component: () => import('../components/App/Tools/Torrent2Magnet.vue')},\n  {path: '/torrent-to-ddl', name: 'torrent2ddl', component: () => import('../components/App/Tools/Torrent2DDL.vue')},\n  {path: '/empty', name: 'empty', component: () => import('../components/App/Empty.vue')},\n  {path: '/:magnet(magnet\\:.*)', name: 'magnet-uri', component: () => import('../components/App/Show.vue')},\n  {path: '/:infohash([0-9a-fA-F]{40})', name: 'infohash', component: () => import('../components/App/Show.vue')},\n]);\n\nexport function createRouter({mode}) {\n  return new VueRouter({\n    mode,\n    routes,\n  });\n}\n","const md5 = require('md5');\n\nexport function randomId(prefix = '') {\n  return md5(prefix + Date.now().toString());\n}\n\nexport function clean(data) {\n  return Object.assign({}, data);\n}\n\nexport function cleanState({name, pwd, file, torrent}) {\n  return {\n    name,\n    pwd,\n    file,\n    torrent: torrent ? torrent.infoHash : null,\n  };\n}\n\nexport function cleanPlayerTrack(track) {\n  if (!track || !track.src) return track;\n  const res = Object.assign({}, track);\n  let href = '';\n  if (typeof res.src === 'object') {\n    href = res.src.href;\n  } else {\n      href = res.src;\n  }\n  res.src = href.split(\"?\")[0];\n  return res;\n}\n\nexport function processSubtitles(subs) {\n  subs = subs.sort((a, b) => {\n    a = a.srclang;\n    b = b.srclang;\n    if (a > b) return 1;\n    if (a < b) return -1;\n    return 0;\n  });\n  let same = [];\n  for (const i in subs) {\n    if (i == 0) continue;\n    if (subs[i].label == subs[i - 1].label) {\n      if (same.length == 0) {\n        same.push(subs[i - 1]);\n      }\n      same.push(subs[i]);\n    } else {\n      if (same.length > 0) {\n        for (const y in same) {\n          const idx = parseInt(y) + 1;\n          same[y].label = same[y].label + ' #' + idx;\n        }\n      }\n      same = [];\n    }\n  }\n  return subs;\n}","import {DEFAULT} from './viewModeTypes';\nimport {IDLE} from './playerStatusTypes';\nimport {randomId} from './helpers';\nexport default function({user, deb, i18n, router, ssr, locales}) {\n    return {\n        ssr,\n        inited: false,\n        windowWidth: 0,\n        name: null,\n        controls: true,\n        progress: 0,\n        features: {\n            p2pProgress: true,\n            title: true,\n            settings: true,\n            fullscreen: true,\n            subtitles: true,\n            continue: true,\n            playpause: true,\n            currentTime: true,\n            timeline: true,\n            duration: true,\n            volume: true,\n            chromecast: true,\n            browse: true,\n            download: true,\n            captions: true,\n            embed: true,\n            autoSubtitles: true,\n        },\n        isCached: false,\n        lastTime: null,\n        zipDownload: false,\n        adsInjected: false,\n        completedPieces: [],\n        width: null,\n        height: null,\n        imdbId: null,\n        autoplay: false,\n        firstPlay: true,\n        playerControlsShown: true,\n        playerFullScreen: false,\n        playerNativeFullScreen: false,\n        caption: null,\n        captionSize: 0,\n        externalSubtitles: [],\n        externalPoster: '',\n        externalTitle: null,\n        header: true,\n        adblock: false,\n        viewMode: DEFAULT,\n        theme: null,\n        user,\n        version: VERSION,\n        subtitle: null,\n        time: 0,\n        mediaInfo: null,\n        debug: deb,\n        baseURL: 'https://webtor.io',\n        sponsorURL: 'https://www.patreon.com/bePatron?u=24145874',\n        authURL: '/auth/patreon',\n        userID: randomId(),\n        downloadID: null,\n        torrent: null,\n        file: null,\n        downloadPath: null,\n        pwd: '/',\n        fileHistory: null,\n        playerStatus: IDLE,\n        playerFilePath: null,\n        playerSourceUrl: null,\n        wrongFormat: false,\n        deliveryFailure: false,\n        loadState: false,\n        deliveryToken: null,\n        abused: false,\n        stats: {},\n        errors: {},\n        source: [],\n        loadError: false,\n        lang: i18n.locale,\n        userLang: locales.length > 0 && locales[0].normalized ? locales[0].normalized : i18n.fallbackLocale,\n        fallbackLang: i18n.fallbackLocale,\n        currentDirFileState: {},\n        recentTorrents: {},\n        newPosition: null,\n        seeder: null,\n        attachedTracks: [],\n        downloadStats: {},\n        downloadType: null,\n    };\n};","export const DEFAULT = 'default';\nexport const VIDEO = 'video';\nexport const DOWNLOAD = 'download';\n","import Vue from 'vue';\nimport {SET_TORRENT_SUCCESS, SET_PWD_SUCCESS,\n        SET_FILE_SUCCESS, SET_SOURCE, SET_PLAYER_STATUS_SUCCESS,\n        SET_PLAYER_FILE_PATH_SUCCESS, SET_TORRENT_FAILURE,\n        CLEAR_TORRENT_LOAD_ERROR, SET_STAT_SUCCESS,\n        SET_LOAD_STATE, SET_LOAD_STATE_SUCCESS, SET_DELIVERY_FAILURE,\n        CLEAR_DELIVERY_FAILURE, SET_DELIVERY_TOKEN, SET_LOAD_STATE_FAILURE,\n        SET_DOWNLOAD_ID, SET_LANG, SET_ABUSED, SET_MEDIA_INFO,\n        SET_PLAYER_TIME, SET_CURRENT_DIR_FILE_STATES, SET_FILE_STATE,\n        SET_RECENT_TORRENTS, SET_RECENT_TORRENT,\n        SET_ADBLOCK_ENABLED, SET_VIEW_MODE, SET_THEME,\n        SET_EXTERNAL_SUBTITLES, SET_EXTERNAL_POSTER, SET_AUTOPLAY, SET_CAPTION, SET_PLAYER_CONTROLS_SHOWN,\n        SET_PLAYER_FULLSCREEN, SET_HEADER, SET_EXTERNAL_TITLE, SET_HEIGHT, SET_WIDTH, SET_IMDBID,\n        SET_COMPLETED_PIECES, CHANGE_CAPTION_SIZE, SET_USER_SETTINGS, SET_PLAYER_SOURCE_URL_SUCCESS,\n        SET_ADS_INJECTED, SET_PLAYER_NATIVE_FULLSCREEN, SET_EXTERNAL_FEATURES, SET_EXTERNAL_CONTROLS,\n        SET_NEW_POSITION, SET_DOWNLOAD_PATH, SET_SEEDER, SET_ZIP_DOWNLOAD,\n        SET_ATTACHED_TRACKS, SET_LAST_TIME, SET_FIRST_PLAY, SET_IS_CACHED, SET_NAME,\n        SET_DOWNLOAD_STAT, DROP_DOWNLOAD_STAT, SET_DOWNLOAD_TYPE, UPDATE_WINDOW_WIDTH, SET_INITED, SET_PROGRESS,\n        SET_USER_LANG,\n       } from './mutationTypes';\nimport {PLAYING, PAUSE, SEEKING, ENDED, IDLE} from './playerStatusTypes';\nconst debug = require('debug')('webtor:lib:store');\nexport default {\n    [SET_INITED](state) {\n        state.inited = true;\n    },\n    [UPDATE_WINDOW_WIDTH](state) {\n        debug('update window width=%o', window.innerWidth);\n        state.windowWidth = window.innerWidth;\n    },\n    [SET_NAME](state, val) {\n        state.name = val;\n    },\n    [SET_PROGRESS](state, val) {\n        state.progress = val;\n    },\n    [SET_IS_CACHED](state, val) {\n        state.isCached = val;\n    },\n    [SET_ATTACHED_TRACKS](state, val) {\n        state.attachedTracks = val;\n    },\n    [CHANGE_CAPTION_SIZE](state, val) {\n        if (state.captionSize + val < 0) {\n            return;\n        }\n        state.captionSize = state.captionSize + val;\n    },\n    [SET_ZIP_DOWNLOAD](state, val) {\n        state.zipDownload = val;\n    },\n    [SET_ADS_INJECTED](state, val) {\n        state.adsInjected = val;\n    },\n    [SET_COMPLETED_PIECES](state, val) {\n        state.completedPieces = val;\n    },\n    [SET_WIDTH](state, val) {\n        state.width = val;\n    },\n    [SET_HEIGHT](state, val) {\n        state.height = val;\n    },\n    [SET_IMDBID](state, val) {\n        state.imdbId = val;\n    },\n    [SET_EXTERNAL_SUBTITLES](state, subtitles) {\n        state.externalSubtitles = subtitles;\n    },\n    [SET_HEADER](state, val) {\n        state.header = val;\n    },\n    [SET_EXTERNAL_TITLE](state, val) {\n        state.externalTitle = val;\n    },\n    [SET_EXTERNAL_FEATURES](state, val) {\n        const features = {};\n        for (const k in state.features) {\n            features[k] = state.controls;\n        }\n        state.features = Object.assign(features, val);\n    },\n    [SET_EXTERNAL_CONTROLS](state, val) {\n        state.controls = val;\n    },\n    [SET_AUTOPLAY](state, val) {\n        state.autoplay = val;\n    },\n    [SET_CAPTION](state, val) {\n        state.caption = val;\n    },\n    [SET_NEW_POSITION](state, val) {\n        state.newPosition = val;\n    },\n    [SET_PLAYER_CONTROLS_SHOWN](state, val) {\n        state.playerControlsShown = val;\n    },\n    [SET_PLAYER_FULLSCREEN](state, val) {\n        state.playerFullScreen = val;\n    },\n    [SET_PLAYER_NATIVE_FULLSCREEN](state, val) {\n        state.playerNativeFullScreen = val;\n    },\n    [SET_EXTERNAL_POSTER](state, poster) {\n        state.externalPoster = poster;\n    },\n    [SET_VIEW_MODE](state, mode) {\n        state.viewMode = mode;\n    },\n    [SET_THEME](state, theme) {\n        state.theme = theme;\n    },\n    [SET_ADBLOCK_ENABLED](state) {\n        state.adblock = true;\n    },\n    [SET_LOAD_STATE](state, text) {\n        state.loadState = text;\n    },\n    [SET_ABUSED](state) {\n        state.loadState = false;\n        state.abused = true;\n    },\n    [SET_LOAD_STATE_SUCCESS](state) {\n        state.loadState = false;\n        state.loadError = false;\n    },\n    [SET_LOAD_STATE_FAILURE](state) {\n        state.loadState = false;\n        state.loadError = true;\n    },\n    [SET_MEDIA_INFO](state, data) {\n        state.mediaInfo = data;\n    },\n    [SET_PLAYER_TIME](state, data) {\n        state.time = data;\n    },\n    [SET_FILE_STATE](state, data) {\n        Vue.set(state.currentDirFileState, data.file, data);\n    },\n    [SET_DOWNLOAD_STAT](state, {p, m}) {\n        Vue.set(state.downloadStats, p, m);\n    },\n    [DROP_DOWNLOAD_STAT](state, p) {\n        Vue.delete(state.downloadStats, p);\n    },\n    [SET_TORRENT_SUCCESS](state, torrent) {\n        if (state.torrent && torrent\n            && torrent.infoHash == state.torrent.infoHash) {\n            return;\n        }\n        state.torrent = torrent;\n        state.file = null;\n        state.pwd = '/';\n        state.source = null;\n        state.alterSource = null;\n        state.playerStatus = null;\n        state.playerFilePath = null;\n        state.wrongFormat = false;\n        state.loadError = false;\n        state.deliveryFailure = false;\n        state.stats = false;\n        state.errors = {};\n        if (state.torrent) {\n            state.abused = false;\n        }\n        state.mediaInfo = null;\n        state.playerStatus = IDLE;\n    },\n    [SET_PWD_SUCCESS](state, pwd) {\n        if (state.pwd == pwd) return;\n        if (!pwd) {\n            state.pwd = '/';\n        } else {\n            state.pwd = pwd;\n        }\n        state.file = null;\n        state.wrongFormat = false;\n        state.deliveryFailure = false;\n        state.playerStatus = IDLE;\n    },\n    [SET_DOWNLOAD_PATH](state, path) {\n        state.downloadPath = path;\n    },\n    [SET_DOWNLOAD_TYPE](state, type) {\n        state.downloadType = type;\n    },\n    [SET_FILE_SUCCESS](state, path) {\n        if (state.file == path) return;\n        state.file = path;\n        state.wrongFormat = false;\n        state.deliveryFailure = false;\n        state.mediaInfo = null;\n        state.caption = null;\n        state.playerStatus = IDLE;\n    },\n    [SET_LANG](state, lang) {\n        state.lang = lang;\n    },\n    [SET_USER_LANG](state, lang) {\n        state.userLang = lang;\n    },\n    [SET_DOWNLOAD_ID](state, id) {\n        state.downloadID = id;\n    },\n    [SET_SOURCE](state, source) {\n        // if (state.playerFilePath != state.filePath) {\n        //   state.playerFilePath = null;\n        // }\n        state.caption = null;\n        state.source = source;\n        state.playerFullScreen = false;\n        state.playerControlsShown = true;\n    },\n    [SET_PLAYER_STATUS_SUCCESS](state, status) {\n        state.playerStatus = status;\n        if (status == SEEKING || status == ENDED) {\n            state.lastTime = null;\n        }\n    },\n    [SET_LAST_TIME](state, time) {\n        state.lastTime = time;\n    },\n    [SET_PLAYER_FILE_PATH_SUCCESS](state, path) {\n        state.playerFilePath = path;\n    },\n    [SET_PLAYER_SOURCE_URL_SUCCESS](state, url) {\n        state.playerSourceUrl = url;\n    },\n    [SET_TORRENT_FAILURE](state) {\n        state.wrongFormat = true;\n    },\n    [SET_DELIVERY_FAILURE](state, { header: { path }, message, data }) {\n        Vue.set(state.errors, `/${path}`, message);\n        state.deliveryFailure = { message, data };\n    },\n    [CLEAR_TORRENT_LOAD_ERROR](state) {\n        state.wrongFormat = false;\n    },\n    [CLEAR_DELIVERY_FAILURE](state) {\n        state.deliveryFailure = false;\n    },\n    [SET_DELIVERY_TOKEN](state, token) {\n        state.deliveryToken = token;\n    },\n    [SET_STAT_SUCCESS](state, data) {\n        state.stats = data;\n    },\n    [SET_CURRENT_DIR_FILE_STATES](state, states) {\n        state.currentDirFileState = states;\n    },\n    [SET_RECENT_TORRENTS](state, torrents) {\n        state.recentTorrents = torrents;\n    },\n    [SET_USER_SETTINGS](state, settings) {\n        if (settings.captionSize) {\n            state.captionSize = settings.captionSize;\n        }\n        if (settings.theme && !state.theme) {\n            state.theme = settings.theme;\n        }\n    },\n    [SET_RECENT_TORRENT](state, data) {\n        Vue.set(state.recentTorrents, data.infoHash, data);\n    },\n    [SET_RECENT_TORRENT](state, data) {\n        Vue.set(state.recentTorrents, data.infoHash, data);\n    },\n    [SET_SEEDER](state, seeder) {\n        state.seeder = seeder;\n    },\n    [SET_FIRST_PLAY](state, val) {\n        state.firstPlay = val;\n    },\n};","export function ls(torrent, pwd, file = null) {\n  if (torrent == null) return [];\n  let tree = {};\n  const addBranch = (tree, parts, file) => {\n    if (parts.length == 0) return file;\n    const part = parts.shift();\n    if (tree[part] == undefined) {\n      tree[part] = addBranch({}, parts, file);\n    } else {\n      tree[part] = addBranch(tree[part], parts, file);\n    }\n    return tree;\n  };\n  for (let file of torrent.files) {\n    const pathParts = file.path.split('/');\n    tree = addBranch(tree, pathParts, file);\n  }\n  let pwdParts = pwd.substring(1).split('/');\n  if (pwdParts[0] == '') pwdParts = [];\n  let currentDir = tree;\n  for (let pwdPart of pwdParts) {\n    currentDir = currentDir[pwdPart];\n  }\n  const res = [];\n  if (!file) {\n    res.push({\n      name: '.',\n      type: 'dir',\n      path: '/',\n    });\n    pwdParts.pop();\n    let upPath = '/';\n    if (pwdParts.length > 0) {\n      upPath = '/' + pwdParts.join('/');\n    }\n    res.push({\n      name: '..',\n      type: 'dir',\n      path: upPath,\n    });\n  }\n  for (let t in currentDir) {\n    if (file && file != t) continue;\n    let item = {};\n    item.name = t;\n    if (pwd == '/') {\n      item.path = `/${t}`;\n    } else {\n      item.path = `${pwd}/${t}`;\n    }\n    if (currentDir[t].length !== undefined) {\n      item.type = 'file';\n      item.length = currentDir[t].length;\n    } else {\n      item.type = 'dir';\n    }\n    res.push(item);\n  }\n  return res.sort((a, b) => a.name.localeCompare(b.name));\n};\n","import {VIDEO, DOWNLOAD} from './viewModeTypes';\nimport {ls} from './fileUtils';\nconst pathParse = require('path-parse');\nimport {getCaptionSource} from './caption';\nconst md5 = require('md5');\nimport parseTorrent from 'parse-torrent';\nimport {clean, processSubtitles, randomId} from './helpers';\n\nexport default function ({i18n, sdk, message, config}) {\n    return {\n        gtagDimensions(state, getters) {\n            return {\n                'dimension1': getters.fileExt.replace(/^\\./, '').toLowerCase(), // Content Type\n                'dimension2': getters.deliveryType == 'transcode', // Content Transcoded?\n                'dimension3': getters.mediaType, // Content Format\n                'dimension4': getters.isAutoplay, // Autoplay?\n                'dimension5': state.file, // Content Name\n                'dimension6': state.torrent.infoHash, // Torrent Infohash\n                'dimension8': getters.isAdblock, // Adblock Enabled?\n                'dimension9': getters.isSponsor, // Is Sponsor?\n                'dimension10': getters.filePath, // Content Path\n                'dimension11': getters.isEmbedded, // Content Path\n            };\n        },\n        gtagDownloadDimensions(state, getters) {\n            return {\n                'dimension6': state.torrent.infoHash, // Torrent Infohash\n                'dimension8': getters.isAdblock, // Adblock Enabled?\n                'dimension9': getters.isSponsor, // Is Sponsor?\n            };\n        },\n        sdk: () => sdk,\n        torrentFile: (state) => ls(state.torrent, state.pwd, state.file)[0],\n        title: (state) => 'Webtor.io',\n        isEmbedded: (state, getters) => getters.isVideoMode || getters.isDownloadMode,\n        iOS() {\n            if (typeof window === 'undefined') return false;\n            return [\n              'iPad Simulator',\n              'iPhone Simulator',\n              'iPod Simulator',\n              'iPad',\n              'iPhone',\n              'iPod'\n            ].includes(window.navigator.platform)\n            // iPad on iOS 13 detection\n            || (window.navigator.userAgent.includes(\"Mac\") && \"ontouchend\" in document)\n        },\n        showShare: (state, getters) => !getters.isEmbedded,\n        showLogo: (state, getters) => !getters.isEmbedded,\n        showDownload: (state, getters) => !getters.isEmbedded,\n        showStatus: (state, getters) => !getters.isEmbedded,\n        selfHosted: () => config.selfHosted,\n        isAutoplay: (state) => state.autoplay,\n        isVideoMode: (state) => state.viewMode == VIDEO,\n        isDownloadMode: (state) => state.viewMode == DOWNLOAD,\n        preroll: (state) => state.preroll,\n        isIndia: (state) => state.country == 'IN',\n        underPlayerBanner: (state) => state.underPlayerBanner,\n        warnBanner: (state) => state.warnBanner,\n        shareLink: (state) => {\n            return window.location.origin + '/' + state.torrent.infoHash;\n        },\n        magnetURI: (state) => {\n            return parseTorrent.toMagnetURI(state.torrent);\n        },\n        blogUrl: (state) => {\n            const lang = state.lang;\n            return `https://blog.webtor.io/${lang}/post/`;\n        },\n        backersUrl: (state) => {\n            const lang = state.lang;\n            return `https://blog.webtor.io/${lang}/backers/`;\n        },\n        technologyUrl: (state) => {\n            const lang = state.lang;\n            return `https://blog.webtor.io/${lang}/technology/`;\n        },\n        metadata: (state) => {\n            const md = {};\n            if (state.userID) {\n                md['user-id'] = state.userID;\n            }\n            return md;\n        },\n        translations: (state) => i18n.messages,\n        ls: (state) => ls(state.torrent, state.pwd),\n        currentVideoFiles: (state, getters) => {\n            const res = [];\n            for (const f of getters.ls) {\n                if (sdk.util.getMediaType(f.name) == 'video') {\n                    res.push(f.name);\n                }\n            }\n            return res;\n        },\n        currentVideoFilesWithFriendlyNames: (state, getters) => {\n            const res = [];\n            for (const name of getters.currentVideoFiles) {\n                let friendlyName = pathParse(name).name;\n                if (friendlyName.match(/s\\d+/i) && friendlyName.match(/e\\d+/i)) {\n                    const mm = friendlyName.match(/e(\\d+)/i);\n                    const num = (parseInt(mm[1]) + '').padStart(2, '0');\n                    friendlyName = i18n.t('common.episode') + ' ' + num;\n                }\n                res.push({\n                    name,\n                    friendlyName,\n                });\n            }\n            return res;\n        },\n        currentPrimaryVideoFiles: (state, getters) => {\n            return getters.currentVideoFiles.filter((v) => !v.match(/sample/i));\n        },\n        currentInfoHash: (state) => {\n            return state.torrent ? state.torrent.infoHash : null;\n        },\n        isDemo: (state, getters) => {\n            return getters.currentInfoHash == '08ada5a7a6183aae1e09d831df6748d566095a10';\n        },\n        displayAds: (state, getters) => {\n            if (getters.isDemo) return false;\n            if (config.ads == false) return false;\n            if (getters.isSponsor) return false;\n            return true;\n        },\n        displayPopups: (state, getters) => {\n            return getters.displayAds;\n        },\n        displayAdsense: (state, getters) => {\n            if (config.adsense == false) return false;\n            if (config.ads == false) return false;\n            if (getters.isSponsor) return false;\n            if (getters.isEmbedded) return false;\n            return true;\n        },\n        displayAdfox: (state, getters) => {\n            if (config.ads == false) return false;\n            if (getters.isSponsor) return false;\n            if (getters.isEmbedded) return false;\n            return true;\n        },\n        displayPrerolls: (state, getters) => {\n            return false;\n            // return getters.displayAds && getters.mediaType == 'video';\n        },\n        isAdblock: (state) => {\n            return state.adblock;\n        },\n        isWindows: (state) => {\n            return navigator.platform.indexOf('Win') > -1;\n        },\n        currentDir: (state) => {\n            if (state.pwd == '/') return null;\n            return state.pwd.split('/').slice(-1).pop();\n        },\n        deepLevel: (state) => {\n            return state.pwd.split('/').length - 1;\n        },\n        deliveryType: (state) => {\n            return sdk.util.getDeliveryType(state.file);\n        },\n        mediaType: (state) => {\n            return sdk.util.getMediaType(state.file);\n        },\n        fileName: (state) => {\n            return pathParse(state.file).name;\n        },\n        fileExt: (state) => {\n            return pathParse(state.file).ext;\n        },\n        filePath: (state) => {\n            if (state.file == null) return state.pwd;\n            if (state.pwd == '/') {\n                return state.file;\n            } else {\n                return state.pwd.substr(1) + '/' + state.file;\n            }\n        },\n        downloadFile: (state) => {\n            if (!state.downloadPath) return null;\n            return pathParse(state.downloadPath).base;\n        },\n        downloadSize: (state) => {\n            let l = 0;\n            for (const f of state.torrent.files) {\n                if (('/' + f.path).startsWith(state.downloadPath)) {\n                    l += f.length;\n                }\n            }\n            return l;\n        },\n        isSponsor: (state) => {\n            if (!state.user) return false;\n            return state.user && state.user.role && state.user.role != 'NOBODY';\n        },\n        sources: async (state, getters) => {\n            const src = await state.seeder.streamUrl(getters.filePath, clean(getters.metadata));\n            // const src = new Url('https://bitdash-a.akamaihd.net/content/sintel/hls/playlist.m3u8');\n            // const src = new Url('http://localhost:8080/index.m3u8');\n            const type = sdk.util.getMimeType(src);\n            const title = 'main';\n            return [{\n                src,\n                type,\n                title,\n            }];\n        },\n        poster: async (state, getters) => {\n            const md = clean(getters.metadata);\n            md.invoke = false;\n            if (state.externalPoster) {\n                return await sdk.ext.streamUrl(state.externalPoster, {}, md);\n            }\n            for (let f of state.torrent.files) {\n                if (sdk.util.getMediaType(f.name) == 'image' && f.name.startsWith(getters.fileName)) {\n                    return await state.seeder.streamUrl(f.path, md);\n                }\n            }\n            const videos = getters.currentPrimaryVideoFiles;\n            if (videos.length == 1) {\n                const files = getters.ls;\n                for (const f of files) {\n                    if (sdk.util.getMediaType(f.name) == 'image' && f.name.match(/poster/)) {\n                        return await state.seeder.streamUrl(f.path, md);\n                    }\n                }\n            }\n            return null;\n        },\n        captionSource(state) {\n            if (!state.player.subtitle) return null;\n            let src = state.player.subtitle.src;\n            if (!src) return null;\n            if (src.href) src = src.href;\n            return getCaptionSource(src);\n        },\n        openSubtitlesTracks: async (state, getters) => {\n            let tracks = [];\n            const search = {};\n            if (state.imdbId) {\n                search['imdb-id'] = state.imdbId;\n            }\n            const os = await state.seeder.openSubtitles(getters.filePath, Object.assign(clean(getters.metadata), search));\n            message.send('open subtitles', os);\n            for (const o of os) {\n                if (!['srt', 'vtt'].includes(o.format)) continue;\n                const lang = sdk.util.getLang(o.srclang)\n                tracks.push({\n                    kind: 'subtitles',\n                    label: lang.nativeName != \"\" ? lang.nativeName : o.label,\n                    srclang: o.srclang,\n                    src: o.src,\n                    hash: md5(o.hash + o.id),\n                });\n            }\n            tracks = processSubtitles(tracks);\n            return tracks;\n        },\n        async tracks(state, getters) {\n            let tracks = [];\n            if (state.player.subtitle) {\n                tracks = [state.player.subtitle];\n            } else {\n                tracks = state.attachedTracks;\n            }\n            let res = [];\n            for (const t of tracks) {\n                res.push(clean(t));\n            }\n            for (const t of res) {\n                if (state.player.subtitle && t.hash == state.player.subtitle.hash) {\n                    t.default = true;\n                    break;\n                } else if (t.autoselect) {\n                    t.default = true;\n                    break;\n                }\n            }\n            return res;\n        },\n        hasLogin() {\n            return config.patreon;\n        }\n    };\n};","function normalizeLang(lang) {\n    return lang.split('_')[0].toLowerCase();\n}\nfunction getRelevantTrackFromTracks(lang, tracks) {\n    lang = normalizeLang(lang);\n    for (const t of tracks) {\n        if (normalizeLang(t.srclang) == lang) {\n            return t;\n        }\n    }\n    return null;\n}\nasync function getRelevantTrackForLang({state, getters}, lang) {\n    let track = null;\n    track = getRelevantTrackFromTracks(lang, state.attachedTracks);\n    if (track) {\n        track.source = 'attached';\n    }\n    if (!track) {\n        const tracks = await getters.openSubtitlesTracks;\n        if (tracks) {\n            track = getRelevantTrackFromTracks(lang, tracks);\n            if (track) {\n                track.source = 'openSubtitles';\n            }\n        }\n    }\n    return track;\n}\nexport default async function getRelevantTrack(store) {\n    const {state} = store;\n    let track = null;\n    track = await getRelevantTrackForLang(store, state.userLang);\n    if (!track) {\n        track = await getRelevantTrackForLang(store, state.fallbackLang);\n    }\n    return track;\n}","const debug = require('debug')('webtor:lib:stoplistCheck');\nfunction findKeyword(k, s) {\n    return k == s || k.startsWith(s + \" \") || k.endsWith(\" \" + s) || k.includes(\" \" + s + \" \");\n}\n\nfunction findKeywordSpaces(k, s) {\n    return findKeyword(k, s) || findKeyword(k, s.replaceAll(/\\s+/g, ''));\n}\n\nfunction findKeywordWithPipes(k, s) {\n    const parts = s.split('|');\n    for (const p of parts) {\n        if (findKeywordSpaces(k, p)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction findKeywordWithPlus(k, s) {\n    const parts = s.split('+');\n    let found = true;\n    for (const p of parts) {\n        if (!findKeywordWithPipes(k, p)) {\n            found = false;\n        }\n    }\n    return found;\n}\nexport default function(str, stoplist) {\n    const k = str.toLowerCase().replaceAll(/[^\\w]/g, ' ').replaceAll(/(\\d+)/g, ' $1 ').replaceAll(/\\s+/g, ' ');\n    for (const s of stoplist) {\n        if (s == \"\") continue; \n        if (findKeywordWithPlus(k, s)) {\n            return false;\n        }\n    }\n    return true;\n}","export default function arrayToText(obj) {\n  for (let k in obj) {\n    if (Array.isArray(obj[k])) {\n      obj[k] = obj[k].join('\\n');\n    } else if (typeof obj[k] === 'object') {\n      obj[k] = arrayToText(obj[k]);\n    }\n  }\n  return obj;\n};\n","import {SET_TORRENT_SUCCESS, SET_PWD_SUCCESS,\n        SET_FILE_SUCCESS, SET_SOURCE, SET_PLAYER_STATUS_SUCCESS,\n        SET_TORRENT_FAILURE,\n        SET_STAT_SUCCESS,\n        SET_LOAD_STATE, SET_LOAD_STATE_SUCCESS,\n        SET_LOAD_STATE_FAILURE,\n        SET_LANG, SET_ABUSED, SET_MEDIA_INFO,\n        SET_PLAYER_TIME, SET_CURRENT_DIR_FILE_STATES, SET_FILE_STATE,\n        SET_RECENT_TORRENTS, SET_RECENT_TORRENT,\n        SET_ADBLOCK_ENABLED, SET_VIEW_MODE,\n        SET_EXTERNAL_SUBTITLES, SET_EXTERNAL_POSTER, SET_AUTOPLAY, SET_CAPTION, \n        SET_HEADER, SET_EXTERNAL_TITLE, SET_HEIGHT, SET_WIDTH, SET_IMDBID,\n        SET_COMPLETED_PIECES, CHANGE_CAPTION_SIZE, SET_USER_SETTINGS, \n        SET_ADS_INJECTED, SET_EXTERNAL_FEATURES,\n        SET_NEW_POSITION, SET_SEEDER, SET_ZIP_DOWNLOAD,\n        SET_ATTACHED_TRACKS, SET_LAST_TIME, SET_FIRST_PLAY, SET_IS_CACHED, SET_EXTERNAL_CONTROLS,\n        SET_DOWNLOAD_PATH, SET_DOWNLOAD_STAT, DROP_DOWNLOAD_STAT, SET_DOWNLOAD_TYPE,\n        UPDATE_WINDOW_WIDTH, SET_INITED, SET_PROGRESS, SET_USER_LANG,\n       } from './mutationTypes';\nimport {PLAYING, PAUSE} from './playerStatusTypes';\nimport {VIDEO, DOWNLOAD} from './viewModeTypes';\nimport {clean, cleanPlayerTrack, cleanState, randomId, processSubtitles} from './helpers';\nimport parseTorrent from 'parse-torrent';\nimport omitEmpty from 'omit-empty';\nimport fileToTorrent from './fileToTorrent';\nimport {getLangRoute} from './../langRoutes';\nimport getRelevantTrack from './../relevantTrack';\nimport stoplistCheck from '../stoplistCheck';\nconst debug = require('debug')('webtor:lib:store');\nconst md5 = require('md5');\nconst Url = require('url-parse');\nconst semver = require('semver');\nconst cloneDeep = require('clone-deep');\nconst loadScript = require('load-script2');\nimport dot from 'dot-object';\nimport arrayToText from './arrayToText';\nimport Vue from 'vue';\nimport state from './state';\nlet logTimePeriod = 15;\nlet statsClient;\nlet adsenseInited = false;\nlet adScriptsInited = false;\nimport debounce from 'lodash/debounce';\nconst sha1 = require('sha1');\nexport default function({router, message, db, sdk, ext, i18n, injectHash, injectCode, config}) {\n    return {\n        log({}, message) {\n            debug(message);\n        },\n        adblockEnabled: ({ commit }) => {\n            // event('Show', 'ADBLOCK_ENABLED');\n            commit(SET_ADBLOCK_ENABLED);\n        },\n        changeCaptionSize: ({ commit, dispatch }, val) => {\n            commit(CHANGE_CAPTION_SIZE, val);\n            dispatch('updateUserSettings');\n        },\n        getMediaInfo: async ({ commit, state, getters }) => {\n            if (getters.deliveryType == 'webseed') return;\n            const md = clean(getters.metadata);\n            md.invoke = false;\n            const data = await state.seeder.mediaInfo(getters.filePath, md);\n            commit(SET_MEDIA_INFO, data);\n        },\n        async play({ commit, dispatch }) {\n            dispatch('stats');\n            commit(SET_PLAYER_STATUS_SUCCESS, PLAYING);\n        },\n        async pause({ commit }) {\n            commit(SET_PLAYER_STATUS_SUCCESS, PAUSE);\n        },\n        async cd({ dispatch, state }, pwd) {\n            if (pwd == state.pwd) return;\n            dispatch('log', `Change directory path=${pwd}`)\n            // event('Show', 'CD', pwd);\n            await dispatch('setState', {\n                torrent: state.torrent,\n                pwd,\n            });\n            await dispatch('pushState');\n        },\n        async getCurrentDirFileStates({ commit, state }) {\n            const states = await db.getCurrentDirFileStates({\n                infoHash: state.torrent.infoHash,\n                pwd: state.pwd,\n            });\n            const statesObj = {};\n            for (const s of states) {\n                statesObj[s.file] = s;\n            }\n            commit(SET_CURRENT_DIR_FILE_STATES, statesObj);\n        },\n        async open({ dispatch, state, commit }, file) {\n            dispatch('log', `Open path file=${file}`)\n            await dispatch('setState', {\n                torrent: state.torrent,\n                pwd: state.pwd,\n                file,\n                autoplay: true,\n            });\n\n            await dispatch('pushState');\n        },\n        async hideDownload({commit}) {\n            commit(SET_DOWNLOAD_TYPE, null);\n            commit(SET_DOWNLOAD_PATH, null);\n        },\n        async download({ dispatch, state, getters, commit }, path) {\n            commit(SET_DOWNLOAD_TYPE, 'file');\n            commit(SET_DOWNLOAD_PATH, path);\n        },\n        async downloadUrl({ state, getters }) {\n            let url = null;\n            if (state.downloadType == 'zip') {\n                url = await state.seeder.zipUrl(state.downloadPath, clean(getters.metadata));\n            } else {\n                url = await state.seeder.downloadUrl(state.downloadPath, clean(getters.metadata));\n            }\n            return url;\n        },\n        async proceedTorrentDownload({ dispatch, state, getters, commit }) {\n            const torrent = cloneDeep(state.torrent);\n            const buf = parseTorrent.toTorrentFile(torrent);\n            // https://stackoverflow.com/a/9834261\n            const blob = new Blob([buf.buffer]);\n            const url = window.URL.createObjectURL(blob);\n            const a = document.createElement('a');\n            a.style.display = 'none';\n            a.href = url;\n            // the filename you want\n            a.download = torrent.name + '.torrent';\n            document.body.appendChild(a);\n            a.click();\n            window.URL.revokeObjectURL(url);\n        },\n        async proceedDownload({ dispatch, state, getters, commit }) {\n            let onMessage = (p, m) => {\n                commit(SET_DOWNLOAD_STAT, {p: p, m});\n            };\n            let onEnd = (p, res) => {\n                // setTimeout(() => {\n                //     commit(DROP_DOWNLOAD_STAT, p);\n                // }, 10000);\n            };\n            let url = null;\n            if (state.downloadType == 'zip') {\n                url = await state.seeder.zipUrlWithProgress(state.downloadPath, onMessage, onEnd, clean(getters.metadata));\n                dispatch('downloadEvent', 'Content Zip Download');\n            } else {\n                url = await state.seeder.downloadUrlWithProgress(state.downloadPath, onMessage, onEnd, clean(getters.metadata));\n                dispatch('downloadEvent', 'Content Download');\n            }\n            dispatch('log', `Download path=${state.downloadPath} type=${state.downloadType} url=${url.href}`)\n            dispatch('stats');\n            window.location = url.href;\n        },\n        event({ getters }, { name, payload = {} }) {\n            const data = Object.assign({}, getters.gtagDimensions, payload);\n            if (Vue.$gtag !== undefined) Vue.$gtag.event(name, data);\n        },\n        downloadEvent({ getters }, name) {\n            const data = Object.assign({}, getters.gtagDownloadDimensions, { 'dimension10': state.downloadPath });\n            if (Vue.$gtag !== undefined) Vue.$gtag.event(name, data);\n        },\n        async zip({ dispatch, state, getters, commit }) {\n            if (!state.torrent) return;\n            let path = state.pwd;\n            if (path == '/') {\n                path = '/' + state.torrent.name;\n            }\n            debug('zip invoked path=%o', path);\n            commit(SET_DOWNLOAD_TYPE, 'zip');\n            commit(SET_DOWNLOAD_PATH, path);\n        },\n        async delivery({ commit, state, getters, dispatch }) {\n            if (!state.torrent || !state.file) return;\n            const filePath = getters.filePath;\n            const src = await state.seeder.streamUrl(filePath, clean(getters.metadata));\n            dispatch('log', `Deliver content file=${filePath} url=${src}`)\n            dispatch('updateSource');\n            dispatch('stats');\n        },\n        async stats({ state, getters, commit }) {\n            const filePath = getters.filePath;\n            const isCached = await state.seeder.isCached(filePath, clean(getters.metadata));\n            commit(SET_IS_CACHED, isCached);\n            if (state.features.p2pProgress && !isCached && !statsClient) {\n                try {\n                    statsClient = state.seeder.stats('', (path, data) => {\n                        // var t0 = performance.now()\n                        commit(SET_STAT_SUCCESS, data);\n                        // var t1 = performance.now()\n                        // console.log(`Call to SET_STAT_SUCCESS took ${(t1 - t0)} milliseconds count ${data.length}.`)\n                    }, clean(getters.metadata));\n                } catch (e) {\n                    debug(e);\n                    statsClient = null;\n                }\n            }\n        },\n        async pushTorrent({ getters, dispatch }, torrent) {\n            const expire = 60 * 60 * 24 * 30; // 1 month\n            dispatch('log', `Push torrent torrentInfo=${torrent.infoHash}`)\n            try {\n                return await sdk.torrent.touch(torrent, expire, clean(getters.metadata));\n            } catch (e) {\n                if (e == 'not found') {\n                    try {\n                        return await sdk.torrent.push(torrent, expire, clean(getters.metadata));\n                    } catch (e) {\n                        debug(e);\n                        throw e;\n                    }\n                } else {\n                    debug(e);\n                    throw e;\n                }\n            }\n        },\n        async pushAbuse({ getters }, abuse) {\n            return await sdk.abuse.push(abuse, clean(getters.metadata));\n        },\n        async setState({ commit, state, dispatch, getters }, newState) {\n            let { torrent, file, pwd, autoplay } = newState;\n            if (!pwd && torrent && torrent.files.length > 0) {\n                const pieces = torrent.files[0].path.split('/');\n                if (pieces.length > 1) {\n                    pwd = '/' + pieces[0];\n                }\n            }\n            if (!pwd) pwd = '/';\n            const oldState = {\n                torrent: state.torrent,\n                file: state.file,\n                pwd: state.pwd,\n            };\n            if (JSON.stringify(cleanState(oldState)) ==\n                JSON.stringify(cleanState(newState))) return;\n            await dispatch('leave');\n            // const downloadID = randomId((torrent ? torrent.infoHash : '') + pwd + file);\n            if ((torrent && !state.torrent) || (torrent && torrent.infoHash != state.torrent.infoHash)) {\n                await db.pushTorrent(torrent);\n            }\n            commit(SET_TORRENT_SUCCESS, torrent);\n            commit(SET_PWD_SUCCESS, pwd);\n            commit(SET_FILE_SUCCESS, file);\n            // commit(SET_DOWNLOAD_ID, downloadID);\n            // commit(SET_AUTOPLAY, oldState.torrent != null);\n            if (torrent && !file && (oldState.torrent == null || oldState.torrent.infoHash != torrent.infoHash)) {\n                const videos = getters.currentPrimaryVideoFiles;\n                if (videos.length > 0) {\n                    file = videos[0];\n                    commit(SET_FILE_SUCCESS, file);\n                }\n            }\n            if (torrent && pwd) {\n                const data = await db.setRecentTorrent(torrent, pwd);\n                commit(SET_RECENT_TORRENT, data);\n\n                await dispatch('getCurrentDirFileStates');\n            }\n            if (torrent && pwd && file) {\n                if (getters.isDownloadMode) {\n                    await dispatch('zip');\n                } else {\n                    const userData = await db.getFileState({ infoHash: torrent.infoHash, pwd, file });\n                    let time = 0;\n                    let track = null;\n                    const tracks = await getters.tracks;\n                    if (tracks.length > 0 && tracks[0].autoselect == true) {\n                        track = tracks[0];\n                    }\n                    if (userData && userData.time) time = userData.time;\n                    if (userData && userData.subtitle && userData.subtitle.src) {\n                        track = userData.subtitle;\n                        let u = new Url(track.src);\n                        const search = {};\n                        if (state.imdbId) {\n                            search['imdb-id'] = state.imdbId;\n                        }\n                        const query = await sdk.util.makeQuery(Object.assign(clean(getters.metadata), search));\n                        u.set('query', query);\n                        track.src = u;\n                    }\n                    if (track && track.type == 'ext') {\n                        let found = false;\n                        for (const t of tracks) {\n                            if (t.hash == track.hash) {\n                                found = true;\n                            }\n                        }\n                        if (!found) track = null;\n                    }\n                    await dispatch('player/setSubtitle', track);\n                    let audio = null;\n                    if (userData && userData.audio && userData.audio.src) {\n                        audio = userData.audio;\n                        let u = new Url(track.src);\n                        const query = await sdk.util.makeQuery(Object.assign(clean(getters.metadata), {}));\n                        u.set('query', query);\n                        audio.src = u;\n                    }\n                    await dispatch('player/setAudio', audio);\n                    commit(SET_AUTOPLAY, autoplay);\n                    commit(SET_PLAYER_TIME, time);\n                    dispatch('event', { name: 'Content Show' });\n                    await dispatch('delivery');\n                }\n            }\n        },\n        async fetchMagnet({ dispatch, getters }, magnet) {\n            let torrent = null;\n            dispatch('log', `Fetch torrent magnet=${magnet}`)\n            var { _, infoHash } = parseTorrent(magnet);\n            dispatch('log', `Fetching from localdb`)\n            torrent = await db.pullTorrent(infoHash);\n            if (!torrent || !torrent.pieces || torrent.pieces.length == 0) {\n                try {\n                    dispatch('log', `Fetching from torrent store`)\n                    torrent = await sdk.torrent.pull(infoHash, clean(getters.metadata));\n                } catch (e) {\n                    debug(e);\n                }\n            }\n            if (!torrent) {\n                dispatch('log', `Fetching by magnet uri from peers`)\n                // event('Show', 'MAGNET_FETCHING', magnet);\n                torrent = await sdk.magnet.fetchTorrent(magnet, clean(getters.metadata));\n                // event('Show', 'MAGNET_FETCHED', magnet);\n            }\n            return torrent;\n        },\n        async fetchFromURL({ }, url) {\n            if (url.match(/^http/)) {\n                url = await sdk.ext.url(url);\n            }\n            return await sdk.torrent.fromUrl(url);\n        },\n        async processInit({ commit, getters, dispatch }, init) {\n            commit(SET_ADS_INJECTED, true);\n            message.send('inject', injectCode);\n            const check = await message.receiveOnce('check');\n            await loadScript('/sandblaster.min.js');\n            const sb = sandblaster.detect();\n            debug('chacking hashes %o %o', sha1(check), injectHash);\n            if ((sha1(check) != injectHash) || sb.sandboxed) {\n                router.push({ name: 'empty' }).catch(() => {});\n                message.send('forbidden');\n                return false;\n            }\n            loadScript('/iframeResizer.contentWindow.min.js');\n            // if (getters.isIndia && !getters.isSponsor) {\n            //     router.push({ name: 'empty' }).catch(() => {});\n            //     message.send('forbidden');\n            //     return\n            // }\n            if (init.imdbId) {\n                commit(SET_IMDBID, init.imdbId);\n            }\n            if (init.subtitles) {\n                commit(SET_EXTERNAL_SUBTITLES, init.subtitles);\n                dispatch('updateAttachedTracks');\n            }\n            if (init.hasOwnProperty('controls')) {\n                commit(SET_EXTERNAL_CONTROLS, init.controls);\n            }\n            if (init.features) {\n                commit(SET_EXTERNAL_FEATURES, init.features);\n            }\n            if (init.poster) {\n                commit(SET_EXTERNAL_POSTER, init.poster);\n            }\n            if (init.title) {\n                commit(SET_EXTERNAL_TITLE, init.title);\n            }\n            if (init.lang) {\n                commit(SET_LANG, init.lang);\n                i18n.locale = init.lang;\n            }\n            if (init.userLang) {\n                commit(SET_USER_LANG, init.userLang);\n            }\n            if (init.mode) {\n                commit(SET_VIEW_MODE, init.mode);\n            }\n\n            if (init.i18n) {\n                for (const l in init.i18n) {\n                    const m = dot.dot(arrayToText(init.i18n[l]));\n                    i18n.mergeLocaleMessage(l, m);\n                }\n            }\n            if (init.header === false) {\n                commit(SET_HEADER, false);\n            }\n            if (init.height) {\n                commit(SET_HEIGHT, init.height);\n            }\n            if (init.width) {\n                commit(SET_WIDTH, init.width);\n            }\n        },\n        async fetchTorrent({ state, commit, dispatch, getters }, newTorrent = null) {\n            if (statsClient) {\n                statsClient.close();\n                statsClient = null;\n            }\n            const r = router.currentRoute;\n            let torrent = state.torrent;\n            if (typeof newTorrent == 'string') {\n                if (newTorrent.match(/^magnet/) || newTorrent.match(/^[a-fA-F0-9]{40}$/)) {\n                    newTorrent = parseTorrent(newTorrent);\n                } else {\n                    newTorrent = await dispatch('fetchFromURL', newTorrent);\n                }\n            }\n            let source = {};\n            message.send('init');\n            const init = await message.receiveOnce('init');\n            // const init = {\n            //   magnet: 'magnet:?xt=urn:btih:08ada5a7a6183aae1e09d831df6748d566095a10&dn=Sintel&tr=udp%3A%2F%2Ftracker.leechers-paradise.org%3A6969&tr=udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969&tr=udp%3A%2F%2Ftracker.opentrackr.org%3A1337&tr=udp%3A%2F%2Fexplodie.org%3A6969&tr=udp%3A%2F%2Ftracker.empire-js.us%3A1337&tr=wss%3A%2F%2Ftracker.btorrent.xyz&tr=wss%3A%2F%2Ftracker.openwebtorrent.com&tr=wss%3A%2F%2Ftracker.fastcast.nz&ws=https%3A%2F%2Fwebtorrent.io%2Ftorrents%2F',\n            //   lang: 'en',\n            //   i18n: {\n            //     en: {\n            //       common: {\n            //         share: 'Shhh!',\n            //       },\n            //     },\n            //   },\n            // }\n            if (init) {\n                const r = await dispatch('processInit', init);\n                if (r === false) return;\n                source = {\n                    torrentUrl: init.torrentUrl,\n                    magnet: init.magnet,\n                };\n                message.receive('play', () => {\n                    dispatch('play');\n                });\n                message.receive('pause', () => {\n                    dispatch('pause');\n                });\n                message.receive('setPosition', async (val) => {\n                    await dispatch('setPosition', val);\n                    await dispatch('setPosition', null);\n                });\n                message.receive('open', async (val) => {\n                    await dispatch('setState', {\n                        torrent: state.torrent,\n                        pwd: val.pwd,\n                        file: val.file,\n                    });\n                    await dispatch('pushState');\n                });\n            } else {\n                source = {\n                    torrentUrl: r.query.torrent_url,\n                    magnet: r.query.magnet,\n                    downloadId: r.query.downloadId,\n                };\n            }\n            if (JSON.stringify(omitEmpty(source)) == '{}' && !state.torrent && !newTorrent) {\n                router.push({ name: 'intro' }).catch(() => {});\n                return;\n            }\n            const magnet = torrent ? parseTorrent.toMagnetURI(torrent) : null;\n            const newTorrentMagnet = newTorrent ? parseTorrent.toMagnetURI(newTorrent) : null;\n            if ((!source.magnet || source.magnet == magnet)\n                && !source.downloadId\n                && !source.torrentUrl\n                && (!newTorrent || newTorrentMagnet == magnet)) {\n                return;\n            }\n            commit(SET_PROGRESS, 25);\n            if (getters.isVideoMode) {\n                commit(SET_LOAD_STATE, 'prepare to play');\n            } else {\n                commit(SET_LOAD_STATE, 'loading torrent');\n            }\n            try {\n                if (newTorrent && (newTorrent.pieces && newTorrent.pieces.length > 0)) {\n                    torrent = newTorrent;\n                } else if (sdk && newTorrent && (!newTorrent.pieces || newTorrent.pieces.length == 0)) {\n                    torrent = await dispatch('fetchMagnet', newTorrentMagnet);\n                } else if (ext && source.downloadId) {\n                    dispatch('log', `Fetch torrent downloadId=${source.downloadId}`)\n                    const downloadId = parseInt(source.downloadId);\n                    debug('request downloadId=%d', downloadId);\n                    torrent = await ext.fetch(downloadId);\n                } else if (sdk && source.torrentUrl) {\n                    torrent = await dispatch('fetchFromURL', source.torrentUrl);\n                } else if (sdk && source.magnet) {\n                    torrent = await dispatch('fetchMagnet', source.magnet);\n                }\n                commit(SET_PROGRESS, 50);\n\n                debug('Got torrent infoHash=%s', torrent.infoHash);\n                if (!await dispatch('checkTorrent', torrent)) {\n                    commit(SET_ABUSED);\n                    commit(SET_PROGRESS, 0);\n                    router.push({ name: 'intro' }).catch(() => {});\n                    return;\n                }\n                await dispatch('pushTorrent', torrent);\n                commit(SET_PROGRESS, 75);\n\n                commit(SET_SEEDER, sdk.seeder.get(torrent.infoHash));\n                if (sdk && sdk.params.cache) {\n                    const cp = await state.seeder.completedPieces();\n                    debug('Got torrent completed pieces length=%o', cp.length);\n                    commit(SET_COMPLETED_PIECES, cp);\n                }\n                commit(SET_LOAD_STATE_SUCCESS);\n                let pwd = null\n                if (r.query.pwd && !newTorrent) pwd = r.query.pwd;\n                if (init && init.pwd) pwd = init.pwd;\n                let file = null;\n                if (r.query.file && !newTorrent) file = r.query.file;\n                if (init && init.file) file = init.file;\n                await dispatch('setState', {\n                    torrent,\n                    pwd,\n                    file,\n                });\n                commit(SET_PROGRESS, 100);\n                message.send('torrent fetched', torrent);\n                // event('Show', 'TORRENT_FETCHED', torrent.infoHash);\n            } catch (e) {\n                message.send('torrent error');\n                await dispatch('setState', {});\n                if (e == 'abused') {\n                    commit(SET_ABUSED);\n                } else {\n                    commit(SET_LOAD_STATE_FAILURE);\n                    debug(e);\n                }\n                commit(SET_PROGRESS, 0);\n            }\n\n            if (r.query.event == 'player-logo-click') {\n                dispatch('event', {name: 'Player Logo Click'});\n            }\n            await dispatch('pushState');\n        },\n        async cleanTorrent({commit}) {\n            commit(SET_TORRENT_SUCCESS, null);\n            commit(SET_PWD_SUCCESS, null);\n            commit(SET_FILE_SUCCESS, null);\n            commit(SET_SOURCE, null);\n        },\n        async processFile({ commit, dispatch }, file) {\n            if (!file) return;\n            try {\n                return await fileToTorrent(file);\n            } catch (e) {\n                console.log(e);\n                commit(SET_TORRENT_FAILURE);\n            }\n        },\n        async leave({ commit }) {\n            commit(SET_SOURCE, null);\n        },\n        async nextFile({ state, dispatch, getters }) {\n            const files = getters.ls;\n            if (files < 2) return;\n            let next = null;\n            let skip = true;\n            for (let f of files) {\n                if (sdk.util.getMediaType(f.path) != sdk.util.getMediaType(state.playerFilePath)) {\n                    continue;\n                }\n                if (!skip) {\n                    next = f;\n                    break;\n                }\n                if (`/${state.playerFilePath}` == f.path) skip = false;\n            }\n            if (!next) return;\n            await dispatch('open', next.name);\n        },\n        async pushState({ state }) {\n            if (state.torrent) {\n                message.send('open', {\n                    file: state.file,\n                    pwd: state.pwd,\n                });\n                try {\n                    debug('push state=%o', {\n                        file: state.file,\n                        pwd: state.pwd,\n                    });\n                    await router.push({\n                        name: 'show', query: omitEmpty({\n                            file: state.file,\n                            pwd: state.pwd,\n                            magnet: parseTorrent.toMagnetURI(state.torrent),\n                            // mode: state.viewMode,\n                            // id: state.id,\n                        })\n                    });\n                } catch (err) {\n                    console.log(err);\n                    if (err.name !== 'NavigationDuplicated') {\n                        throw err;\n                    }\n                }\n            } else {\n                router.push({ name: 'intro' }).catch(() => {});\n            }\n        },\n        async checkTorrent({}, torrent) {\n            for (const f of torrent.files) {\n                if (!stoplistCheck(f.path, config.stoplist)) {\n                    return false;\n                }\n            }\n            return true;\n        },\n        async updateCaption({ state, getters, commit }) {\n            const source = await getters.captionSource;\n            if (!source) {\n                commit(SET_CAPTION, null);\n                return;\n            }\n            const caption = await source.getEntry(state.time);\n            commit(SET_CAPTION, caption);\n        },\n        async updateTime({ commit, getters, dispatch, state }, { time, file }) {\n            commit(SET_PLAYER_TIME, time);\n            dispatch('updateCaption');\n            dispatch('updateFileState', file);\n            if (state.lastTime === null) {\n                commit(SET_LAST_TIME, time);\n            } else if (time - logTimePeriod - 5 > state.lastTime) {\n                commit(SET_LAST_TIME, time);\n                state.lastTime = time;\n            } else if (time - logTimePeriod > state.lastTime) {\n                dispatch('event', { name: 'Content Playtime', payload: { metric1: time - state.lastTime } });\n                commit(SET_LAST_TIME, time);\n            }\n            message.send('current time', time);\n        },\n        async setDuration({ }, val) {\n            message.send('duration', val);\n        },\n        firstPlay({commit, dispatch}) {\n            commit(SET_FIRST_PLAY, false);\n            dispatch('event', { name: 'Content Plays' });\n        },\n        async setPosition({ commit }, val) {\n            commit(SET_NEW_POSITION, val);\n        },\n        // async setTrack({ commit, dispatch, state, getters }, track) {\n        //     await dispatch('updateSource');\n        //     await dispatch('updateFileState', state.file);\n        //     await dispatch('updateCaption');\n        // },\n        async processAutoSubtitles(store) {\n            const track = await getRelevantTrack(store);\n            const {dispatch} = store;\n            if (track) {\n                dispatch('player/setSubtitle', track);\n            }\n        },\n        async updateAttachedTracks({ state, commit, getters }) {\n            let tracks = [];\n\n            const md = clean(getters.metadata);\n            md.invoke = false;\n\n            for (const s of state.externalSubtitles) {\n                let autoselect = false;\n                if (s.autoselect) autoselect = true;\n                if (s.default || s.default == \"\") autoselect = true;\n                tracks.push({\n                    kind: 'subtitles',\n                    label: s.label,\n                    srclang: s.srclang,\n                    src: await sdk.ext.streamUrl(s.src, {}, md),\n                    hash: md5(s.src),\n                    autoselect,\n                    type: 'ext',\n                });\n            }\n\n            for (const s of state.hls.subtitles) {\n                tracks.push({\n                    kind: 'subtitles',\n                    label: s.label,\n                    srclang: s.srclang,\n                    hash: md5(s.src),\n                    src: new Url(s.src),\n                    autoselect: s.autoselect,\n                    default: s.default,\n                    forced: s.forced,\n                    type: 'hls',\n                });\n            }\n\n            if (state.torrent) {\n                for (let f of state.torrent.files) {\n                    if (sdk.util.getMediaType(f.name) == 'subtitle' && f.name.startsWith(getters.fileName)) {\n                        const lang = sdk.util.getSubtitleLang(f.name)\n                        tracks.push({\n                            kind: 'subtitles',\n                            label: lang ? lang.nativeName : f.name,\n                            srclang: lang ? lang.code : 'en',\n                            src: await state.seeder.streamUrl(f.path, md),\n                            hash: md5(state.infoHash + f.name),\n                        });\n                    }\n                }\n            }\n\n            tracks = processSubtitles(tracks);\n            commit(SET_ATTACHED_TRACKS, tracks);\n        },\n        async updateSource({ state, getters, commit }) {\n            const format = sdk.util.getMediaType(state.file);\n            const sources = await getters.sources;\n            const tracks = await getters.tracks;\n            const poster = await getters.poster;\n            const autoplay = getters.isAutoplay;\n            const source = {\n                format,\n                sources,\n                tracks,\n                autoplay,\n                poster,\n            };\n            debug('setting source=%o', source);\n            commit(SET_SOURCE, source);\n        },\n        async updateFileState({ state, commit }, file = null) {\n            if (!file) file = state.file;\n            if (!state.file || !state.torrent || !state.pwd || state.file != file) return;\n            let data = {\n                infoHash: state.torrent.infoHash,\n                pwd: state.pwd,\n                file: state.file,\n                subtitle: cleanPlayerTrack(state.player.subtitle),\n                audio: cleanPlayerTrack(state.player.audio),\n                time: state.time,\n            };\n            data = await db.updateFileState(data);\n            commit(SET_FILE_STATE, data);\n        },\n        async init({ dispatch, commit }) {\n            await Promise.all([\n                dispatch('getRecentTorrents'),\n                dispatch('getUserSettings'),\n                dispatch('initRouter'),\n                dispatch('initWindowWidth'),\n            ]);\n            commit(SET_INITED);\n            debug('inited');\n        },\n        updateWindowWidth({commit}) {\n            commit(UPDATE_WINDOW_WIDTH);\n        },\n        async initWindowWidth({commit}) {\n            if (typeof window !== \"undefined\") {\n                window.addEventListener('resize', debounce(() => {\n                    commit(UPDATE_WINDOW_WIDTH);\n                }, 1000));\n            }\n        },\n        async initAdScripts({getters}) {\n            if (adScriptsInited || !getters.displayPopups) return;\n            adScriptsInited = true;\n            for (const ss of config.adScripts) {\n                if (ss.context && ss.context.embed === false && getters.isEmbedded) {\n                    continue;\n                }\n                const s = document.createElement('script');\n                s.type = 'text/javascript';\n                s.setAttribute('data-cfasync', 'false');\n                s.src = ss.src;\n                document.body.appendChild(s);\n            }\n        },\n        async initAdsense() {\n            if (adsenseInited) return;\n            adsenseInited = true;\n            const s1 = document.createElement('script');\n            s1.type = 'text/javascript';\n            s1.setAttribute('async', 'true');\n            s1.src = 'https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=' + config.adsense.client;\n            s1.crossOrigin= 'anonymous';\n            document.body.appendChild(s1);\n        },\n        async placeAdsenseAd({getters, dispatch}, {slot, name, format, style, placeholder}) {\n            if (!getters.displayAdsense) return;\n            dispatch('initAdsense');\n            if (name) {\n                slot = config.adsense.slots[name];\n            }\n            if (!style) style = 'display:block'\n            let code = `<ins class=\"adsbygoogle\"`;\n            code += ` style=\"${style}\"`;\n            code += ` data-ad-client=\"${config.adsense.client}\"`;\n            code += ` data-ad-slot=\"${slot}\"`;\n            if (format) code += ` data-ad-format=\"${format}\"`;\n            code += ` data-full-width-responsive=\"true\"></ins>`;\n            let tries = 0;\n            var checkExist = setInterval(function() {\n                if (tries > 30) {\n                    clearInterval(checkExist);\n                    return;\n                }\n                if (document.getElementById(placeholder) && ('adsbygoogle' in window) && document.getElementById(placeholder).offsetWidth > 0) {\n                    document.getElementById(placeholder).innerHTML = code;\n                    (adsbygoogle = window.adsbygoogle || []).push({});\n                    clearInterval(checkExist);\n                    return;\n                }\n                tries++;\n            }, 100);\n        },\n        async initRouter({state, commit, dispatch}) {\n            router.beforeEach(async (to, from, next) => {\n                // if (to.hash.startsWith('#/')) {\n                //     router.replace(to.hash.replace('#/', '')).catch(() => {});\n                //     return;\n                // }\n                if (typeof window !== \"undefined\") {\n                    const url = new URL(window.location);\n                    if ((url.pathname != '/' || url.search != '')) {\n                        history.replaceState({}, '', '/');\n                        router.replace(url.pathname + url.search);\n                        return;\n                    }\n                }\n                let page_title = to.name;\n                let page_path = to.path;\n                if (to.query.magnet) {\n                    page_path = '/' + parseTorrent(to.query.magnet).infoHash;\n                    if (to.query.pwd) {\n                        page_path += to.query.pwd;\n                        page_title = to.query.pwd;\n                    }\n                    if (to.query.file) {\n                        page_path += '/' + to.query.file;\n                        page_title = to.query.file;\n                    }\n                }\n                if (Vue.$gtag) {\n                    Vue.$gtag.pageview({\n                        page_path,\n                        page_title,\n                    });\n                }\n                if (to.query.mode == VIDEO || state.viewMode == VIDEO) {\n                    commit(SET_VIEW_MODE, VIDEO);\n                }\n                if (to.query.mode == DOWNLOAD || state.viewMode == DOWNLOAD) {\n                    commit(SET_VIEW_MODE, DOWNLOAD);\n                }\n                if (from.params.lang && !to.params.lang) {\n                    return router.push(getLangRoute(to, from.params.lang)).catch(() => {});\n                }\n                if (to.params.lang) {\n                    commit(SET_LANG, to.params.lang);\n                    i18n.locale = to.params.lang;\n                }\n                if (to.hash || (to.name && to.name.startsWith('magnet-uri')) || (to.name && to.name.startsWith('infohash'))) {\n                    let input = '';\n                    if (to.name && to.name.startsWith('infohash')) {\n                        input = to.params.infohash;\n                    } else if (to.name && to.name.startsWith('magnet-uri')) {\n                        input = decodeURIComponent(to.fullPath.substring(1));\n                        input = input.match(/magnet\\:.*/)[0];\n                    } else {\n                        input = to.hash.substring(1);\n                    }\n                    try {\n                        const data = parseTorrent(input);\n                        const magnet = parseTorrent.toMagnetURI(data);\n                        return router.push({\n                            name: 'show',\n                            query: {\n                                magnet,\n                            },\n                        }).catch(() => {});\n                    } catch (e) {\n                        debug(e);\n                    }\n                }\n                return next();\n            });\n        },\n        async getUserSettings({ commit }) {\n            if (!db) return;\n            const settings = await db.getUserSettings();\n            commit(SET_USER_SETTINGS, settings);\n        },\n        async updateUserSettings({ state }) {\n            const settings = {\n                captionSize: state.captionSize,\n            };\n            db.updateUserSettings(settings);\n        },\n        async getRecentTorrent(_, infoHash) {\n            return await db.pullTorrent(infoHash);\n        },\n        async getRecentTorrents({ commit }) {\n            if (!db) return;\n            const torrents = await db.getRecentTorrents();\n            const res = {};\n            for (const t of torrents) {\n                res[t.infoHash] = t;\n            }\n            commit(SET_RECENT_TORRENTS, res);\n        },\n        async updatePlayerStatus({commit}, status) {\n            message.send('player status', status);\n            commit(SET_PLAYER_STATUS_SUCCESS, status);\n        },\n        playerInited() {\n            message.send('inited');\n        },\n    };\n};","function prepareTrack(d) {\n    return {\n        autoselect: d.autoselect,\n        default: d.default,\n        forced: d.forced,\n        srclang: d.lang,\n        label: d.name,\n        src: d.url,\n        id: d.id,\n    };\n}\n\nconst state = () => ({\n    audio: [],\n    subtitles: [],\n});\n\nconst mutations = {\n    setSubtitles(state, subtitles) {\n        state.subtitles = subtitles;\n    },\n    setAudio(state, audio) {\n        state.audio = audio;\n    },\n};\n\nconst getters = {};\n\nconst actions = {\n    async updateSubtitles({ commit, dispatch }, subs) {\n        const r = [];\n        for (const s of subs) {\n            r.push(prepareTrack(s));\n        }\n        commit('setSubtitles', r);\n        dispatch('updateAttachedTracks', {}, {root: true});\n    },\n    async updateAudio({ commit }, audio) {\n        const r = [];\n        for (const a of audio) {\n            r.push(prepareTrack(a));\n        }\n        commit('setAudio', r);\n    },\n};\n\nexport default {\n    namespaced: true,\n    strict: true,\n    state,\n    getters,\n    actions,\n    mutations\n};","const state = () => ({\n    audio: null,\n    subtitle: null,\n    error: null,\n    availableDuration: 0,\n    duration: 0,\n    dropSubtitles: [],\n});\n\nconst mutations = {\n    setSubtitle(state, subtitle) {\n        state.subtitle = subtitle;\n    },\n    setAudio(state, audio) {\n        state.audio = audio;\n    },\n    setError(state, error) {\n        state.error = error;\n    },\n    setAvailableDuration(state, d) {\n        state.availableDuration = d;\n    },\n    setDuration(state, d) {\n        state.duration = d;\n    },\n    dropSubtitles(state, d) {\n        state.dropSubtitles = d;\n    },\n    clearSubtitleDrops(state) {\n        state.dropSubtitles = [];\n    },\n};\n\nconst getters = {\n    seeder: (state, getters, rootState, rootGetters)  => rootState.seeder,\n    filePath: (state, getters, rootState, rootGetters)  => rootGetters.filePath,\n};\n\nconst actions = {\n    async dropSubtitles({commit}, s) {\n        commit('dropSubtitles', s);\n    },\n    async clearSubtitleDrops({commit}) {\n        commit('clearSubtitleDrops');\n    },\n    async setSubtitle({commit, dispatch}, s) {\n        commit('setSubtitle', s);\n        // await dispatch('updateSource', {}, {root: true});\n        await dispatch('updateFileState', null, {root: true});\n        await dispatch('updateCaption', {}, {root: true});\n    },\n    async setAudio({commit, dispatch}, a) {\n        commit('setAudio', a);\n        // await dispatch('updateSource', {}, {root: true});\n        await dispatch('updateFileState', null, {root: true});\n    },\n    async updateAvailableDuration({commit, dispatch}, d) {\n        commit('setAvailableDuration', d);\n    },\n    async updateDuration({commit}, d) {\n        commit('setDuration', d);\n    },\n    async setError({dispatch, state, getters, commit}, e) {\n        try {\n            const err = await getters.seeder.error(getters.filePath);\n            if (err) {\n                let e = 'unknown error';\n                if (err.includes('probing failed')) {\n                    e = 'no peers for transcoding';\n                } else if (err.includes('context deadline exceeded')) {\n                    e = 'no peers for transcoding';\n                } else {\n                    e = err.split(': ').pop();\n                }\n                commit('setError', e);\n            }\n        } catch (e) {\n            console.log(e);\n            commit('setError', e.message);\n        }\n    },\n};\n\nexport default {\n    namespaced: true,\n    strict: true,\n    state,\n    getters,\n    actions,\n    mutations\n};","export default ['en', 'ru'];","import merge from 'deepmerge';\nimport dot from 'dot-object';\nimport arrayToText from './store/arrayToText';\nimport VueI18n from 'vue-i18n';\nimport Vue from 'vue';\nimport locale from 'locale';\nimport langs from './langs';\nconst debug = require('debug')('webtor:i18n');\nconst supported = new locale.Locales(langs);\nconst messages = {};\nfor (let l of langs) {\n  messages[l] = dot.dot(arrayToText(\n    merge(\n      require(`../i18n/common.json`),\n      require(`../i18n/${l}.json`),\n    )\n  ));\n}\nVue.use(VueI18n);\nexport function createI18n(locales) {\n  const bestLocale = locales.best(supported);\n  const lang = bestLocale.normalized;\n  return new VueI18n({\n    locale: lang,\n    fallbackLocale: 'en',\n    messages,\n    pluralizationRules: {\n      'ru': function(choice, choicesLength) {\n        if (choice === 0) {\n          return 0;\n        }\n        const teen = choice > 10 && choice < 20;\n        const endsWithOne = choice % 10 === 1;\n        if (choicesLength < 4) {\n          return (!teen && endsWithOne) ? 1 : 2;\n        }\n        if (!teen && endsWithOne) {\n          return 1;\n        }\n        if (!teen && choice % 10 >= 2 && choice % 10 <= 4) {\n          return 2;\n        }\n        return (choicesLength < 4) ? 2 : 3;\n      }\n    },\n  });\n}\n","import Vue from 'vue';\nimport MarkdownIt from 'markdown-it';\nlet inited = false;\nexport default function() {\n  if (inited) return;\n  inited = true;\n  const md = new MarkdownIt();\n  Object.defineProperty(Vue.prototype, '$tm', {\n    get() {\n      return (...args) => {\n        return md.renderInline(this.$t(...args));\n      };\n    },\n  });\n};\n","import './scss/custom.scss';\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport Meta from 'vue-meta';\nimport Icon from 'vue-awesome/components/Icon.vue';\nVue.component('icon', Icon)\nimport {LayoutPlugin, ButtonPlugin, NavbarPlugin, AlertPlugin, JumbotronPlugin,\n  ButtonGroupPlugin, ButtonToolbarPlugin, FormInputPlugin, LinkPlugin, FormTextareaPlugin,\n  FormSelectPlugin, FormPlugin, InputGroupPlugin} from 'bootstrap-vue';\nimport {CardPlugin, ListGroupPlugin, ProgressPlugin} from 'bootstrap-vue';\nimport {FormGroupPlugin, FormRadioPlugin} from 'bootstrap-vue';\nimport {ModalPlugin} from 'bootstrap-vue';\nVue.use(Vuex);\nVue.use(Meta);\nVue.use(LinkPlugin);\nVue.use(LayoutPlugin);\nVue.use(ButtonPlugin);\nVue.use(NavbarPlugin);\nVue.use(AlertPlugin);\nVue.use(JumbotronPlugin);\nVue.use(ButtonGroupPlugin);\nVue.use(ButtonToolbarPlugin)\nVue.use(FormInputPlugin);\nVue.use(FormTextareaPlugin);\nVue.use(FormSelectPlugin);\nVue.use(FormPlugin);\nVue.use(CardPlugin);\nVue.use(ListGroupPlugin);\nVue.use(ProgressPlugin);\nVue.use(FormGroupPlugin)\nVue.use(FormRadioPlugin)\nVue.use(InputGroupPlugin)\nVue.use(ModalPlugin)\nimport vClickOutside from 'v-click-outside';\nVue.use(vClickOutside);\n\nimport {createRouter} from './lib/router';\nimport {createStore} from './lib/store';\nimport {createI18n} from './lib/i18n';\nimport markdown from './lib/markdown';\nimport App from './components/App.vue';\nimport registry from './lib/registry';\n\nexport async function createApp({api, db, locales, routerMode, ext, debug, user, sdk, message, config, ssr, injectHash, injectCode}) {\n  const router = createRouter({mode: routerMode});\n  const i18n = createI18n(locales);\n  const store = createStore({router, db, api, i18n, locales, ext, debug, user, sdk, message, config, ssr, injectHash, injectCode});\n  store.dispatch('init');\n  registry.buildVue = (opts) => {\n    return new Vue({\n      i18n,\n      store,\n      router,\n      ...opts,\n    });\n  };\n  const app = registry.buildVue({\n    render: (h) => h(App),\n  })\n  markdown();\n  return {app, router, store};\n}\n","import Vuex from 'vuex';\n\nimport state from './store/state';\nimport mutations from './store/mutations';\nimport getters from './store/getters';\nimport actions from './store/actions';\nimport hls from './store/modules/hls';\nimport player from './store/modules/player';\n\nexport function createStore({router, i18n, ext, debug: deb, db, user, sdk, message, config, ssr, injectHash, injectCode, locales}) {\n  return new Vuex.Store({\n    modules: {\n      hls,\n      player,\n    },\n    strict: true,\n    state: state({user, deb, i18n, ssr, locales}),\n    mutations,\n    getters: getters({i18n, sdk, message, config}),\n    actions: actions({router, message, db, sdk, ext, i18n, injectHash, injectCode, config}),\n  });\n};\n","import { openDB, deleteDB, wrap, unwrap } from 'idb';\nconst md5 = require('md5');\nconst debug = require('debug')('webtor:lib:clientDb');\n\nclass Db {\n    getDb() {\n        if (this.db != undefined) return this.db;\n        this.db = openDB('webtor', 3, {\n            upgrade(db, oldVersion) {\n                if (oldVersion < 1) {\n                    const fileStore = db.createObjectStore('files', {\n                        keyPath: 'id',\n                    });\n                    db.createObjectStore('torrents', {\n                        keyPath: 'id',\n                    });\n                    fileStore.createIndex('hashAndPwd', 'hashAndPwd');\n                }\n                if (oldVersion < 2) {\n                    db.createObjectStore('recentTorrents', {\n                        keyPath: 'id',\n                    });\n                }\n                if (oldVersion < 3) {\n                    db.createObjectStore('userSettings', {\n                        keyPath: 'id',\n                    });\n                }\n            },\n        });\n        return this.db;\n    }\n    makeFileKey(data) {\n        return md5(data.infoHash + data.pwd + data.file);\n    }\n    makeHashAndPwd(data) {\n        return md5(data.infoHash + data.pwd);\n    }\n    async updateFileState(data) {\n        const id = this.makeFileKey(data);\n        const db = await this.getDb();\n        const hashAndPwd = this.makeHashAndPwd(data);\n        data.id = id;\n        data.hashAndPwd = hashAndPwd;\n        data.timestamp = Date.now();\n        await db.put('files', data);\n        return data;\n    }\n\n    async getFileState(data) { \n        const id = this.makeFileKey(data);\n        const db = await this.getDb();\n        return await db.get('files', id);\n    }\n    async getCurrentDirFileStates(data) { \n        const hashAndPwd = this.makeHashAndPwd(data);\n        const db = await this.getDb();\n        return await db.getAllFromIndex('files', 'hashAndPwd', hashAndPwd)\n    }\n    async pushTorrent(torrent) { \n        const db = await this.getDb();\n        const id = torrent.infoHash;\n        return await db.put('torrents', {id, torrent});\n    }\n    async pullTorrent(infoHash) { \n        const db = await this.getDb();\n        const data = await db.get('torrents', infoHash);\n        if (data) return data.torrent;\n        return null;\n    }\n    async setRecentTorrent(torrent, pwd) { \n        const db = await this.getDb();\n        const id = torrent.infoHash;\n        const name = torrent.name;\n        const infoHash = torrent.infoHash;\n        const timestamp = Date.now();\n        const data = {id, infoHash, name, pwd, timestamp};\n        await db.put('recentTorrents', data);\n        return data;\n    }\n    async getRecentTorrents() { \n        const db = await this.getDb();\n        return await db.getAll('recentTorrents');\n    }\n    async updateUserSettings(data) { \n        const db = await this.getDb();\n        data.id = 1;\n        return await db.put('userSettings', data);\n     }\n    async getUserSettings() {\n        const db = await this.getDb();\n        const data = await db.get('userSettings', 1);\n        if (!data) return {};\n        return data;\n    }\n}\n\nclass FakeDb {\n    async updateUserSettings(data) { }\n    async getUserSettings() { return {}; }\n    async updateFileState(data) { return {}; }\n    async getFileState(data) { return null; }\n    async getCurrentDirFileStates(data) { return []; }\n    async pushTorrent(data) { }\n    async pullTorrent(data) { return null; }\n    async setRecentTorrent(data) { return {}; }\n    async getRecentTorrents() { return []; }\n}\n\nexport async function createDb() {\n    if (!('indexedDB' in window)) {\n        debug('This browser doesn\\'t support IndexedDB');\n        return new FakeDb();\n    }\n    const db = new Db();\n    try {\n        await db.getUserSettings();\n    } catch(e) {\n        debug(e);\n        return new FakeDb();\n    }\n    return db;\n}","Object.assign(MediaElementPlayer.prototype, {\n    async builddownload(player, controls, layers) {\n        const store = this.options.store;\n        let {getters, dispatch} = store;\n        player.downloadButton = document.createElement('div');\n\t\tplayer.downloadButton.className = `${this.options.classPrefix}button ${this.options.classPrefix}download-button`;\n\t\tplayer.downloadButton.innerHTML =\n\t\t\t`<button type=\"button\" role=\"button\" aria-owns=\"${this.id}\" tabindex=\"0\"></button>`;\n\t\tthis.addControlElement(player.downloadButton, 'download');\n        const t = (e) => {\n            e.stopPropagation();\n            e.preventDefault();\n            dispatch('download', '/' + getters.filePath);\n        }\n        player.downloadButton.addEventListener('click', t);\n    },\n})","const debug = require('debug')('webtor:lib:message');\nfunction inIframe() {\n  try {\n      return window.self !== window.top;\n  } catch (e) {\n      return true;\n  }\n}\nconst urlParams = new URLSearchParams(window.location.search);\nconst id = urlParams.get('id');\ndebug('using message id=%o', id);\nconst message = {\n  id() {\n    return id;\n  },\n  send(m, data = {}) {\n    if (!inIframe) return;\n    if (!id) {\n      m = 'webtor: ' + m;\n    } else {\n      m = {\n        id,\n        name: m,\n        data,\n      };\n    }\n    debug('post message=%o data=%o', m, data);\n    window.parent.postMessage(m, '*');\n  },\n  receiveOnce(name) {\n    return new Promise((resolve, reject) => {\n      const func = (event) => {\n        const d = event.data;\n        if (!id) {\n          window.removeEventListener('message', func);\n          resolve();\n        }\n        if (d.id == id && d.name == name) {\n            debug('receive message=%o', d);\n            window.removeEventListener('message', func);\n            resolve(d.data);\n        }\n      }\n      window.addEventListener('message', func);\n    });\n  },\n  receive(name, callback) {\n    window.addEventListener('message', function(event) {\n        const d = event.data;\n        if (d.id == id && d.name == name) {\n            debug('receive message=%o', d);\n            callback(d.data);\n        }\n    });\n  }\n}\nexport default message;","import {createApp} from './index';\nimport {createDb} from './lib/clientDb';\nimport {analytics} from './lib/analytics';\nimport {createExt} from './lib/ext';\nimport locale from 'locale';\nimport message from './lib/message';\nimport webtor from '@webtor/platform-sdk-js';\nlet url = (window.location != window.parent.location)\n      ? document.referrer\n      : document.location.href;\nif (url) url = new URL(url);\nlet token = window.__TOKEN__;\nlet user = window.__USER__;\nlet config = JSON.parse(Buffer.from(window.__CONFIG__, 'base64').toString('utf-8'));\nlet injectCode = window.__INJECT_CODE__;\nlet injectHash = window.__INJECT_HASH__;\nif (window.__INITIAL_STATE__ && window.__INITIAL_STATE__.user) {\n  user = window.__INITIAL_STATE__.user;\n}\n\nconst sdk = webtor(Object.assign({\n  async getToken() {\n    const res = await fetch('/token/', {\n      headers: {\n        token,\n      },\n    });\n    token = await res.text();\n    return token;\n  },\n}, config.sdk));\nif (config.ga) {\n  analytics(Object.assign({\n    appVersion: require('../../package.json').version,\n  }, config.ga));\n}\nconst ext = createExt();\nconst routerMode = null;\nconst lang = window.navigator.userLanguage || window.navigator.language;\nconst locales = new locale.Locales(lang);\nlet debug = false;\ntry {\n  debug = localStorage && !!localStorage.debug;\n} catch (e) {\n  console.log(e);\n}\n(async () => {\n  const db = await createDb();\n  const {app, router, store} = await createApp({locales,\n    routerMode, ext, debug, db, user, sdk, message, url, config, ssr: false, injectCode, injectHash});\n  if (window.__INITIAL_STATE__) {\n    window.__INITIAL_STATE__.ssr = false;\n    store.replaceState(window.__INITIAL_STATE__);\n  }\n  router.onReady(async() => {\n    app.$mount('#app');\n    store.dispatch('updateWindowWidth');\n  });\n})()\n","import parseTorrent from 'parse-torrent';\nexport default function fileToTorrent(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.addEventListener('load', (e) => {\n      const arr = new Uint8Array(e.target.result);\n      const buffer = new Buffer(arr);\n      try {\n        resolve(parseTorrent(buffer));\n      } catch(e) {\n        reject(e);\n      }\n    });\n    reader.addEventListener('error', (err) => {\n      reject(err);\n    });\n    reader.readAsArrayBuffer(file);\n  });\n};\n","import Settings from '../../components/App/Show/Player/MediaElement/Settings.vue';\n\nimport registry from '../registry';\n\nObject.assign(MediaElementPlayer.prototype, {\n    async buildsettings(player, controls, layers) {\n        const store = this.options.store;\n        let {state, getters, dispatch} = store;\n        // if (getters.deliveryType !== 'webseed') {\n        //     await dispatch('getMediaInfo');\n        // }\n        player.settingsButton = document.createElement('div');\n\t\tplayer.settingsButton.className = `${this.options.classPrefix}button ${this.options.classPrefix}settings-button`;\n\t\tplayer.settingsButton.innerHTML =\n\t\t\t`<button type=\"button\" role=\"button\" aria-owns=\"${this.id}\" tabindex=\"0\"></button>`;\n\t\tthis.addControlElement(player.settingsButton, 'settings');\n        player.settingsLayer = document.createElement('div');\n        player.settingsLayer.className = `${this.options.classPrefix}layer ${this.options.classPrefix}overlay ${this.options.classPrefix}settings`;\n        const settingsContainer = document.createElement('div');\n        player.settingsLayer.appendChild(settingsContainer);\n        const playLayer = layers.querySelector(`.${this.options.classPrefix}overlay-play`);\n        // playLayer.style.display = 'none';\n\n        layers.insertBefore(player.settingsLayer, playLayer);\n        player.settingsLayer.style.width = '100%';\n        player.settingsLayer.style.height = '100%';\n        // player.settingsLayer.click = function(e) {\n        //     console.log(e);\n        //     e.preventDefault();\n        //     return false;\n        // }\n        let toggle = false;\n        const t = () => {\n            if (toggle) {\n                player.settingsLayer.style.display = 'none';\n            } else {\n                player.settingsLayer.style.display = '';\n            }\n            toggle = !toggle;\n        }\n        registry.buildVue({\n            el: settingsContainer,\n            render: (h) => h(Settings, {on: {\n                close: t,\n            }}),\n        });\n        player.settingsLayer.style.display = 'none';\n        player.settingsLayer.style.zIndex = 2;\n        player.settingsButton.addEventListener('click', t);\n    },\n})","export const PLAY = 'PLAY';\nexport const PLAYING = 'PLAYING';\nexport const PAUSE = 'PAUSE';\nexport const ENDED = 'ENDED';\nexport const SEEKING = 'SEEKING';\nexport const SEEKED = 'SEEKED';\nexport const IDLE = 'IDLE';\n","const nameSuffix = '_with_lang';\nexport function getLangRoute(current, lang = null) {\n  const params = Object.assign({}, current.params);\n  let name = current.name;\n  if (lang) {\n    params.lang = lang;\n    name = current.meta.lang ? current.name : current.name + nameSuffix;\n\n  } else {\n    delete params['lang'];\n    name = current.meta.lang ? current.name.replace(nameSuffix, '') : current.name;\n  }\n  return {\n    name,\n    params,\n    query: current.query,\n    hash: current.hash,\n  };\n}\nexport function addLangRoutes(routes) {\n  const routesWithLang = routes.map((r) => {\n    return {\n      ...r,\n      path: `/:lang${r.path}`,\n      name: r.name + nameSuffix,\n      meta: {\n        lang: true,\n      },\n      pathToRegexpOptions: {strict: true},\n    };\n  });\n  return routes.concat(routesWithLang);\n}\n","export function checkAdBlock() {\n    return new Promise((resolve, reject) => {\n        let adBlockEnabled = false;\n        let testAd = document.createElement('div');\n        testAd.innerHTML = '&nbsp;';\n        testAd.className = 'adsbox';\n        document.body.appendChild(testAd);\n        setTimeout(function() {\n            if (testAd.offsetHeight === 0) {\n                adBlockEnabled = true;\n            }\n            testAd.remove();\n            resolve(adBlockEnabled);\n        }, 100);\n    });\n};\n","import {getLangRoute} from './langRoutes';\nexport function getLangLinks(translations, route, router, baseURL, lang) {\n    const res = [];\n    for (const key in translations) {\n        const r = getLangRoute(route, key);\n        const href = baseURL + router.resolve(r).href.replace('#', '');\n        res.push({rel: 'alternate', hreflang: key, href})\n        if (key == lang) {\n            res.push({rel: 'canonical', hreflang: key, href})\n        }\n    }\n    return res;\n}","import Error from '../../components/App/Show/Player/MediaElement/Error.vue';\n\nimport registry from '../registry';\n\nObject.assign(MediaElementPlayer.prototype, {\n    async builderror(player, controls, layers) {\n        const store = this.options.store;\n        player.errorLayer = document.createElement('div');\n        player.errorLayer.className = `${this.options.classPrefix}layer ${this.options.classPrefix}overlay ${this.options.classPrefix}error`;\n        const errorContainer = document.createElement('div');\n        player.errorLayer.appendChild(errorContainer);\n        player.errorLayer.style.width = '100%';\n        player.errorLayer.style.height = '100%';\n        player.errorLayer.style.display = 'none';\n        const playLayer = layers.querySelector(`.${this.options.classPrefix}overlay-play`);\n        player.media.addEventListener('error', function(e) {\n            player.errorLayer.style.display = '';\n        });\n        layers.insertBefore(player.errorLayer, playLayer);\n        registry.buildVue({\n            el: errorContainer,\n            render: (h) => h(Error),\n        });\n    },\n})","export default function(pieces, piecesLength, progressLength) {\n    const segments = [];\n    let curSegment = null; \n    let prevPiece = null; \n    for (const p of pieces) {\n    if (prevPiece != null) {\n        if ((p.position - 1) != prevPiece.position) {\n        if (curSegment != null) {\n            segments.push(curSegment);\n        }\n        curSegment = {start: p.position, end: p.position + 1};\n        } else {\n        if (curSegment != null) {\n            curSegment.end = p.position + 1;\n        }\n        }\n    } else {\n        curSegment = {start: p.position, end: p.position + 1};\n    }\n    prevPiece = p;\n    }\n    if (curSegment != null) {\n    segments.push(curSegment);\n    }\n    for (const i in segments) {\n    segments[i] = {\n        start: segments[i].start / piecesLength * progressLength,\n        end:   segments[i].end   / piecesLength * progressLength,\n    };\n    }\n    return segments;\n}"],"sourceRoot":""}